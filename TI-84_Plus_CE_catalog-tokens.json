{
  "0xB2": {
    "name": "abs(",
    "type": "function",
    "categories": [
      "Catalog > A",
      "Math > Number"
    ],
    "syntaxes": [
      {
        "syntax": "abs(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the absolute value of a real number, expression, list, or matrix.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "1:abs("
        ]
      },
      {
        "syntax": "abs(complex value)",
        "arguments": [
          [
            "complex value",
            "",
            false
          ]
        ],
        "description": "Returns the magnitude of a complex number or list.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "CMPLX",
          "5:abs("
        ]
      }
    ],
    "localizations": {
      "FR": "abs("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x40": {
    "name": " and ",
    "type": "infix operator",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "valueA and valueB",
        "arguments": [
          [
            "valueA",
            "",
            false
          ],
          [
            "valueB",
            "",
            false
          ]
        ],
        "description": "Returns 1 (true) when both `valueA` and `valueB` are true.  Otherwise, return is 0 (false).\n`valueA` and `valueB` can be real numbers, expressions, or lists.\nTI Connect™ Program Editor Tip:\nNotice the token is \"_and_\" where \"_\" is a space.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[test]",
          "LOGIC",
          "1:and"
        ]
      }
    ],
    "localizations": {
      "FR": " et "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB28": {
    "name": "angle(",
    "type": "function",
    "categories": [
      "Catalog > A",
      "Math > Complex"
    ],
    "syntaxes": [
      {
        "syntax": "angle(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the polar angle of a complex number or list of complex numbers.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "CMPLX",
          "4:angle("
        ]
      }
    ],
    "localizations": {
      "FR": "argument("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB59": {
    "name": "ANOVA(",
    "type": "function",
    "categories": [
      "Catalog > A",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "ANOVA(list1,list2[,list3,...,list20])",
        "arguments": [
          [
            "list1",
            "list",
            false
          ],
          [
            "list2",
            "list",
            false
          ],
          [
            "list3",
            "list",
            true
          ],
          [
            "...",
            "",
            true
          ],
          [
            "list20",
            "list",
            true
          ]
        ],
        "description": "Performs a one-way analysis of variance for comparing the means of two to 20 populations.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "TESTS",
          "H:ANOVA("
        ]
      }
    ],
    "localizations": {
      "FR": "ANUVA("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x72": {
    "name": "Ans",
    "type": "constant",
    "categories": [
      "Catalog > A",
      "Keypad"
    ],
    "syntaxes": [
      {
        "syntax": "Ans",
        "arguments": [],
        "description": "Returns the last answer.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[ans]"
        ]
      }
    ],
    "localizations": {
      "FR": "Rep"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB68": {
    "name": "Archive ",
    "type": "command",
    "categories": [
      "Catalog > A",
      "Memory"
    ],
    "syntaxes": [
      {
        "syntax": "Archive variables",
        "arguments": [
          [
            "variables",
            "",
            false
          ]
        ],
        "description": "Moves the specified `variable` from RAM to the user data archive memory.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[mem]",
          "5:Archive"
        ]
      }
    ],
    "localizations": {
      "FR": "Archive "
    },
    "since": {
      "TI-83+": "0.103"
    }
  },
  "0x14": {
    "name": "augment(",
    "type": "function",
    "categories": [
      "Catalog > A",
      "Matrix > Math"
    ],
    "syntaxes": [
      {
        "syntax": "augment( matrixA ,matrixB )",
        "arguments": [
          [
            "matrixA",
            "",
            false
          ],
          [
            "matrixB",
            "",
            false
          ]
        ],
        "description": "Returns a matrix, which is `matrixB` appended to `matrixA` as new columns.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "7:augment("
        ]
      },
      {
        "syntax": "augment(listA,listB)",
        "arguments": [
          [
            "listA",
            "list",
            false
          ],
          [
            "listB",
            "list",
            false
          ]
        ],
        "description": "Returns a list, which is `listB` concatenated to the end of `listA`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "9:augment("
        ]
      }
    ],
    "localizations": {
      "FR": "chaîne("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF3B": {
    "name": "AUTO",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "AUTO",
        "arguments": [],
        "description": "Displays answers in a similar format as the input.",
        "inEditorOnly": false,
        "location": [
          "[mode]",
          "Answers: AUTO"
        ]
      }
    ],
    "localizations": {
      "FR": "AUTO"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0x7E09": {
    "name": "AxesOff",
    "type": "command",
    "categories": [
      "Catalog > A",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "AxesOff",
        "arguments": [],
        "description": "Turns off the graph axes.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "AxesOff"
        ]
      }
    ],
    "localizations": {
      "FR": "AxesNAff"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x7E08": {
    "name": "AxesOn ",
    "type": "command",
    "categories": [
      "Catalog > A",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "AxesOn[color#]",
        "arguments": [
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Turns on the graph axes with color. The `color `option allows the color of the axes to be specified.\nColor#: 10 - 24 or color name pasted from [vars] COLOR..",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "AxesOn"
        ]
      }
    ],
    "localizations": {
      "FR": "AxesAff "
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0xBB4F": {
    "name": "a+b𝑖",
    "type": "command",
    "categories": [
      "Catalog > A",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "a+bi",
        "arguments": [
          [
            "i",
            "",
            false
          ]
        ],
        "description": "Sets the mode to rectangular complex number format (a+b`i`).",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "a+b",
          "𝑖"
        ]
      }
    ],
    "localizations": {
      "FR": "a+b𝑖"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF64": {
    "name": "BackgroundOff",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "BackgroundOff",
        "arguments": [],
        "description": "Turns off background image in the graph area.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[draw]",
          "BACKGROUND",
          "2:BackgroundOff:"
        ]
      }
    ],
    "localizations": {
      "FR": "ArrPlanNAff"
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0xEF5B": {
    "name": "BackgroundOn ",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "BackgroundOn n",
        "arguments": [],
        "description": "Displays a menu the Background Image Var n (Image#n) specified in the graph area.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[draw]",
          "BACKGROUND",
          "1:BackgroundOn"
        ]
      }
    ],
    "localizations": {
      "FR": "ArrPlanAff "
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0xBB02": {
    "name": "bal(",
    "type": "function",
    "categories": [
      "Catalog > B",
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "bal(npmt[,roundvalue])",
        "arguments": [
          [
            "npmt",
            "",
            false
          ],
          [
            "roundvalue",
            "",
            true
          ]
        ],
        "description": "Computes the balance at `npmt `for an amortization schedule using stored values for `PV`, I%, and `PMT` and rounds the computation to `roundvalue.`",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "9:bal("
        ]
      }
    ],
    "localizations": {
      "FR": "paSolde("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB16": {
    "name": "binomcdf(",
    "type": "function",
    "categories": [
      "Catalog > B",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "binomcdf(numtrials,p[,x])",
        "arguments": [
          [
            "numtrials",
            "",
            false
          ],
          [
            "p",
            "",
            false
          ],
          [
            "x",
            "",
            true
          ]
        ],
        "description": "Computes a cumulative probability at `x` for the discrete binomial distribution with the specified `numtrials` and probability `p` of success on each trial.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "B:binomcdf("
        ]
      }
    ],
    "localizations": {
      "FR": "binomFRép("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB15": {
    "name": "binompdf(",
    "type": "function",
    "categories": [
      "Catalog > B",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "binompdf(numtrials,p[,x])",
        "arguments": [
          [
            "numtrials",
            "",
            false
          ],
          [
            "p",
            "",
            false
          ],
          [
            "x",
            "",
            true
          ]
        ],
        "description": "Computes a probability at `x` for the discrete binomial distribution with the specified `numtrials` and probability `p` of success on each trial.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "A:binompdf("
        ]
      }
    ],
    "localizations": {
      "FR": "binomfdp("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF6C": {
    "name": "BorderColor ",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "BorderColor[color#]",
        "arguments": [
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Turns on a border color surrounding the graph area with the specified color. Color #:1-4.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "BorderColor"
        ]
      }
    ],
    "localizations": {
      "FR": "CouleurBord "
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0x5": {
    "name": "Boxplot",
    "type": "constant",
    "categories": [
      "Catalog > B",
      "Stat Plot > Type"
    ],
    "syntaxes": [
      {
        "syntax": "Boxplot Plot#(type,Xlist[,freqlist,color#])",
        "arguments": [
          [
            "type",
            "",
            false
          ],
          [
            "Xlist",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Defines Plot# (1, 2, or 3) of type",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[stat plot]"
        ]
      }
    ],
    "localizations": {
      "FR": "Carré"
    }
  },
  "0xEF02": {
    "name": "checkTmr(",
    "type": "function",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "checkTmr(starttime)",
        "arguments": [
          [
            "starttime",
            "",
            false
          ]
        ],
        "description": "Returns the number of seconds since you used `startTmr` to start the timer. The `starttime` is the value displayed by `startTmr`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "checkTmr("
        ]
      }
    ],
    "localizations": {
      "FR": "AffMintr("
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xBB13": {
    "name": "χ²cdf(",
    "type": "function",
    "categories": [
      "Catalog > C",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "χ²cdf(lowerbound,upperbound,df)",
        "arguments": [
          [
            "χ²",
            "",
            false
          ],
          [
            "lowerbound",
            "",
            false
          ],
          [
            "upperbound",
            "",
            false
          ],
          [
            "df",
            "",
            false
          ]
        ],
        "description": "Computes the χ²distribution probability between `lowerbound` and` upperbound` for the specified degrees of freedom `df`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "8:cdf("
        ]
      }
    ],
    "localizations": {
      "FR": "X²FRép(\t"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB1D": {
    "name": "χ²pdf(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "χ²pdf(x,df)",
        "arguments": [
          [
            "χ²",
            "",
            false
          ],
          [
            "x",
            "",
            false
          ],
          [
            "df",
            "",
            false
          ]
        ],
        "description": "Computes the probability density function (pdf) for the χ² distribution at a specified `x` value for the specified degrees of freedom `df`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "7:pdf("
        ]
      }
    ],
    "localizations": {
      "FR": "Χ²Fdp("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB40": {
    "name": "χ²-Test(",
    "type": "function",
    "categories": [
      "Catalog > T",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "χ²-Test(observedmatrix,expectedmatrix[,drawflag,color#])",
        "arguments": [
          [
            "χ²-",
            "",
            false
          ],
          [
            "observedmatrix",
            "",
            false
          ],
          [
            "expectedmatrix",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Performs a chi-square test. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "C:Test("
        ]
      }
    ],
    "localizations": {
      "FR": "χ²-Test("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF14": {
    "name": "χ²GOF-Test(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "χ²GOF-Test(observedlist,expectedlist,df [,drawflag,color#])",
        "arguments": [
          [
            "χ²",
            "",
            false
          ],
          [
            "-",
            "",
            false
          ],
          [
            "observedlist",
            "list",
            false
          ],
          [
            "expectedlist",
            "list",
            false
          ],
          [
            "df",
            "",
            false
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Performs a test to confirm that sample data is from a population that conforms to a specified distribution.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "D:",
          "GOF",
          "Test("
        ]
      }
    ],
    "localizations": {
      "FR": "χ²GOF-Test("
    },
    "since": {
      "TI-84+": "2.30"
    }
  },
  "0xA5": {
    "name": "Circle(",
    "type": "function",
    "categories": [
      "Catalog > C",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Circle(X,Y,radius[,color#,linestyle#])",
        "arguments": [
          [
            "X",
            "",
            false
          ],
          [
            "Y",
            "",
            false
          ],
          [
            "radius",
            "",
            false
          ],
          [
            "color#",
            "colorNum",
            true
          ],
          [
            "linestyle#",
            "number",
            true
          ]
        ],
        "description": "Draws a circle with center (`X`,`Y`) and `radius` with specified\nColor#: 10 - 24 or color name pasted from [vars] COLOR.\nlinestyle#: 1-2.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "9:Circle("
        ]
      }
    ],
    "localizations": {
      "FR": "Cercle("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF38": {
    "name": "CLASSIC",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "CLASSIC",
        "arguments": [],
        "description": "Displays inputs and outputs on a single line, such as 1/2+3/4.",
        "inEditorOnly": false,
        "location": [
          "[mode]",
          "CLASSIC"
        ]
      }
    ],
    "localizations": {
      "FR": "CLASSIC"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xBB57": {
    "name": "Clear Entries",
    "type": "command",
    "categories": [
      "Catalog > C",
      "Memory"
    ],
    "syntaxes": [
      {
        "syntax": "Clear Entries",
        "arguments": [],
        "description": "Clears the contents of the Last Entry storage area.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[mem]",
          "MEMORY",
          "3:Clear Entries"
        ]
      }
    ],
    "localizations": {
      "FR": "Efface entrées"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF0F": {
    "name": "ClockOff",
    "type": "command",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "ClockOff",
        "arguments": [],
        "description": "Turns off the clock display in the mode screen.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "ClockOff"
        ]
      }
    ],
    "localizations": {
      "FR": "HorlNAff"
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xEF10": {
    "name": "ClockOn",
    "type": "command",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "ClockOn",
        "arguments": [],
        "description": "Turns on the clock display in the mode screen.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "ClockOn"
        ]
      }
    ],
    "localizations": {
      "FR": "HorlAff"
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xBB52": {
    "name": "ClrAllLists",
    "type": "command",
    "categories": [
      "Catalog > C",
      "Memory"
    ],
    "syntaxes": [
      {
        "syntax": "ClrAllLists",
        "arguments": [],
        "description": "Sets to `0` the dimension of all lists in memory.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[mem]",
          "MEMORY",
          "4:ClrAllLists"
        ]
      }
    ],
    "localizations": {
      "FR": "EffToutListes"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x85": {
    "name": "ClrDraw",
    "type": "command",
    "categories": [
      "Catalog > C",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "ClrDraw",
        "arguments": [],
        "description": "Clears all drawn elements from a graph or drawing.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "1:ClrDraw"
        ]
      }
    ],
    "localizations": {
      "FR": "EffDessin"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xE1": {
    "name": "ClrHome",
    "type": "command",
    "categories": [
      "Catalog > C",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "ClrHome",
        "arguments": [],
        "description": "Clears the home screen.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "8:ClrHome"
        ]
      }
    ],
    "localizations": {
      "FR": "EffEcran"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xFA": {
    "name": "ClrList ",
    "type": "command",
    "categories": [
      "Catalog > C",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "ClrListlistname1[,listname2, ...,listname n]",
        "arguments": [
          [
            "listname1",
            "listName",
            false
          ],
          [
            "listname2",
            "listName",
            true
          ],
          [
            "listname n",
            "list",
            true
          ]
        ],
        "description": "Sets the dimension of one or more listnames to 0.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "EDIT",
          "4:ClrList"
        ]
      }
    ],
    "localizations": {
      "FR": "EffListe "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xFB": {
    "name": "ClrTable",
    "type": "command",
    "categories": [
      "Catalog > C",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "ClrTable",
        "arguments": [],
        "description": "Clears all values from the table.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "9:ClrTable"
        ]
      }
    ],
    "localizations": {
      "FR": "EffTable"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB25": {
    "name": "conj(",
    "type": "function",
    "categories": [
      "Catalog > C",
      "Math > Complex"
    ],
    "syntaxes": [
      {
        "syntax": "conj(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the complex conjugate of a complex number or list of complex numbers.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "CMPLX",
          "1:conj("
        ]
      }
    ],
    "localizations": {
      "FR": "conj("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x7E05": {
    "name": "CoordOff",
    "type": "command",
    "categories": [
      "Catalog > C",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "CoordOff",
        "arguments": [],
        "description": "Turns off cursor coordinate value display.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "CoordOff"
        ]
      }
    ],
    "localizations": {
      "FR": "CoordNAff"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x7E04": {
    "name": "CoordOn",
    "type": "command",
    "categories": [
      "Catalog > C",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "CoordOn",
        "arguments": [],
        "description": "Turns on cursor coordinate value display.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "CoordOn"
        ]
      }
    ],
    "localizations": {
      "FR": "CoordAff"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xC4": {
    "name": "cos(",
    "type": "function",
    "categories": [
      "Catalog > C",
      "Keypad"
    ],
    "syntaxes": [
      {
        "syntax": "cos(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns cosine of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[cos]"
        ]
      }
    ],
    "localizations": {
      "FR": "cos("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xC5": {
    "name": "cos⁻¹(",
    "type": "function",
    "categories": [
      "Catalog > C",
      "Keypad"
    ],
    "syntaxes": [
      {
        "syntax": "cos⁻¹(value)",
        "arguments": [
          [
            "⁻¹",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns arccosine of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[cos⁻¹]"
        ]
      }
    ],
    "localizations": {
      "FR": "Arccos("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xCA": {
    "name": "cosh(",
    "type": "function",
    "categories": [
      "Catalog > C"
    ],
    "syntaxes": [
      {
        "syntax": "cosh(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns hyperbolic cosine of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "cosh("
        ]
      }
    ],
    "localizations": {
      "FR": "ch("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xCB": {
    "name": "cosh⁻¹(",
    "type": "function",
    "categories": [
      "Catalog > C"
    ],
    "syntaxes": [
      {
        "syntax": "cosh⁻¹ (value)",
        "arguments": [
          [
            "⁻¹",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns hyperbolic arccosine of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "cosh"
        ]
      }
    ],
    "localizations": {
      "FR": "Argch("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x0": {
    "name": "CubicReg ",
    "type": "command",
    "categories": [
      "Catalog > C",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "CubicReg [Xlistname,Ylistname,freqlist,regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Fits a cubic regression model to `Xlistname` and `Ylistname` with frequency `freqlist`, and stores the regression equation to `regequ`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "6:CubicReg"
        ]
      }
    ],
    "localizations": {
      "FR": "RegCubique "
    }
  },
  "0xBB29": {
    "name": "cumSum(",
    "type": "function",
    "categories": [
      "Catalog > C",
      "List > Ops"
    ],
    "syntaxes": [
      {
        "syntax": "cumSum(list)",
        "arguments": [
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Returns a list of the cumulative sums of the elements in `list`, starting with the first element.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "6:cumSum("
        ]
      },
      {
        "syntax": "cumSum(matrix)",
        "arguments": [
          [
            "matrix",
            "",
            false
          ]
        ],
        "description": "Returns a matrix of the cumulative sums of `matrix` elements. Each element in the returned matrix is a cumulative sum of a `matrix` column from top to bottom.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "0:cumSum("
        ]
      }
    ],
    "localizations": {
      "FR": "somCum("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF06": {
    "name": "dayOfWk(",
    "type": "function",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "dayOfWk(year,month,day)",
        "arguments": [
          [
            "year",
            "",
            false
          ],
          [
            "month",
            "",
            false
          ],
          [
            "day",
            "",
            false
          ]
        ],
        "description": "Returns an integer from 1 to 7, with each integer representing a day of the week. Use `dayOfWk(` to determine on which day of the week a particular date would occur. The `year` must be 4 digits; `month` and `day` can be 1 or 2 digits.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "dayOfWk(",
          "1:Sunday",
          "2:Monday",
          "3:Tuesday..."
        ]
      }
    ],
    "localizations": {
      "FR": "joursem("
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xBB07": {
    "name": "dbd(",
    "type": "function",
    "categories": [
      "Catalog > D",
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "dbd(date1,date2)",
        "arguments": [
          [
            "date1",
            "",
            false
          ],
          [
            "date2",
            "",
            false
          ]
        ],
        "description": "Calculates the number of days between `date1` and `date2` using the actual-day-count method.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "D:dbd("
        ]
      }
    ],
    "localizations": {
      "FR": "jed("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF3C": {
    "name": "DEC",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "DEC",
        "arguments": [],
        "description": "Displays answers as integers or decimal numbers.",
        "inEditorOnly": false,
        "location": [
          "[mode]",
          "Answers: DEC"
        ]
      }
    ],
    "localizations": {
      "FR": "DEC"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0x2": {
    "name": "►Dec",
    "type": "conversion",
    "categories": [
      "Catalog > D",
      "Math > Math"
    ],
    "syntaxes": [
      {
        "syntax": "value►Dec",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Displays a real or complex number, expression, list, or matrix in decimal format.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "MATH",
          "2:Dec"
        ]
      }
    ],
    "localizations": {
      "FR": "►Dec"
    }
  },
  "0x65": {
    "name": "Degree",
    "type": "command",
    "categories": [
      "Catalog > D",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Degree",
        "arguments": [],
        "description": "Sets degree angle mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Degree"
        ]
      }
    ],
    "localizations": {
      "FR": "Degré"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB54": {
    "name": "DelVar ",
    "type": "command",
    "categories": [
      "Catalog > D",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "DelVar variable",
        "arguments": [
          [
            "variable",
            "",
            false
          ]
        ],
        "description": "Deletes from memory the contents of `variable`.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "G:DelVar"
        ]
      }
    ],
    "localizations": {
      "FR": "EffVar "
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x7D": {
    "name": "DependAsk",
    "type": "command",
    "categories": [
      "Catalog > D",
      "Table Settings"
    ],
    "syntaxes": [
      {
        "syntax": "DependAsk",
        "arguments": [],
        "description": "Sets table to ask for dependent-variable values.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[tblset]",
          "Depend: Ask"
        ]
      }
    ],
    "localizations": {
      "FR": "CalculsDem"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x7C": {
    "name": "DependAuto",
    "type": "command",
    "categories": [
      "Catalog > D",
      "Table Settings"
    ],
    "syntaxes": [
      {
        "syntax": "DependAuto",
        "arguments": [],
        "description": "Sets table to generate dependent-variable values automatically.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[tblset]",
          "Depend: Auto"
        ]
      }
    ],
    "localizations": {
      "FR": "CalculsAuto"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xB3": {
    "name": "det(",
    "type": "function",
    "categories": [
      "Catalog > D",
      "Matrix > Math"
    ],
    "syntaxes": [
      {
        "syntax": "det(matrix)",
        "arguments": [
          [
            "matrix",
            "",
            false
          ]
        ],
        "description": "Returns determinant of `matrix`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "1:det("
        ]
      }
    ],
    "localizations": {
      "FR": "dét("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF6B": {
    "name": "DetectAsymOff",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "DetectAsymOff",
        "arguments": [],
        "description": "Turns off checks for rational function asymptotes when graphing. Impacts graph speed. Does not perform extra calculations to detect asymptotes pixel to pixel while graphing.  Pixels will connect across the screen even across an asymptote.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "DetectAsymOff"
        ]
      }
    ],
    "localizations": {
      "FR": "DétectAsymDés"
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0xEF6A": {
    "name": "DetectAsymOn",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "DetectAsymOn",
        "arguments": [],
        "description": "Turns on checks for rational function asymptotes when graphing. Impacts graph speed. Performs more calculations and will not connect pixels across an asymptote on a graph.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]"
        ]
      }
    ],
    "localizations": {
      "FR": "DétectAsymAct"
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0xBB67": {
    "name": "DiagnosticOff",
    "type": "command",
    "categories": [
      "Catalog > D"
    ],
    "syntaxes": [
      {
        "syntax": "DiagnosticOff",
        "arguments": [],
        "description": "Sets diagnostics-off mode; `r`, `r`², and `R`² are not displayed as regression model results.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "DiagnosticOff"
        ]
      }
    ],
    "localizations": {
      "FR": "CorrelNAff"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB66": {
    "name": "DiagnosticOn",
    "type": "command",
    "categories": [
      "Catalog > D"
    ],
    "syntaxes": [
      {
        "syntax": "DiagnosticOn",
        "arguments": [],
        "description": "Sets diagnostics-on mode; `r`, `r`², and `R`² are displayed as regression model results.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "DiagnosticOn"
        ]
      }
    ],
    "localizations": {
      "FR": "CorrelAff"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xB5": {
    "name": "dim(",
    "type": "dim",
    "categories": [
      "Catalog > D",
      "List > Ops"
    ],
    "syntaxes": [
      {
        "syntax": "dim(listname)",
        "arguments": [
          [
            "listname",
            "list",
            false
          ]
        ],
        "description": "Returns the dimension of `listname`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "3:dim("
        ]
      },
      {
        "syntax": "dim(matrixname)",
        "arguments": [
          [
            "matrixname",
            "",
            false
          ]
        ],
        "description": "Returns the dimension of `matrixname` as a list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "3:dim("
        ]
      },
      {
        "syntax": "length→dim(listname)",
        "arguments": [
          [
            "length",
            "",
            false
          ],
          [
            "→",
            "",
            false
          ],
          [
            "listname",
            "list",
            false
          ]
        ],
        "description": "Assigns a new dimension (`length`) to a new or existing `listname`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "3:dim("
        ]
      },
      {
        "syntax": "{rows,columns}→dim(matrixname)",
        "arguments": [
          [
            "rows",
            "",
            false
          ],
          [
            "columns",
            "",
            false
          ],
          [
            "→",
            "",
            false
          ],
          [
            "matrixname",
            "",
            false
          ]
        ],
        "description": "Assigns new dimensions to a new or existing `matrixname`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "3:dim("
        ]
      }
    ],
    "localizations": {
      "FR": "dim("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xDE": {
    "name": "Disp ",
    "type": "command",
    "categories": [
      "Catalog > D",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "Disp",
        "arguments": [],
        "description": "Displays the home screen.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "3:Disp"
        ]
      },
      {
        "syntax": "Disp [valueA,valueB,valueC,...,value n]",
        "arguments": [
          [
            "valueA",
            "",
            true
          ],
          [
            "valueB",
            "",
            true
          ],
          [
            "valueC",
            "",
            true
          ],
          [
            "...",
            "",
            true
          ],
          [
            "value n",
            "",
            true
          ]
        ],
        "description": "Displays each value.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "3:Disp"
        ]
      }
    ],
    "localizations": {
      "FR": "Disp "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xDF": {
    "name": "DispGraph",
    "type": "command",
    "categories": [
      "Catalog > D",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "DispGraph",
        "arguments": [],
        "description": "Displays the graph.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "4:DispGraph"
        ]
      }
    ],
    "localizations": {
      "FR": "AffGraph"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xE5": {
    "name": "DispTable",
    "type": "command",
    "categories": [
      "Catalog > D",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "DispTable",
        "arguments": [],
        "description": "Displays the table.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "5:DispTable"
        ]
      }
    ],
    "localizations": {
      "FR": "AffTable"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x1": {
    "name": "►DMS",
    "type": "conversion",
    "categories": [
      "Angle",
      "Catalog > D"
    ],
    "syntaxes": [
      {
        "syntax": "value►DMS",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Displays `value` in DMS format.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[angle]",
          "ANGLE",
          "4:DMS"
        ]
      }
    ],
    "localizations": {
      "FR": "►DMS"
    }
  },
  "0x7E07": {
    "name": "Dot-Thick",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "Dot-Thick",
        "comment": "Alias ?",
        "arguments": [],
        "description": "Sets dot plotting mode; resets all Y=editor graph-style settings to Dot-Thick.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Dot-Thick"
        ]
      }
    ],
    "localizations": {
      "FR": "Dot-Thick"
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0xEF75": {
    "name": "Dot-Thin",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "Dot-Thin",
        "arguments": [],
        "description": "Sets dot plotting mode; resets all Y=editor graph-style settings to Dot-Thin.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Dot-Thin"
        ]
      }
    ],
    "localizations": {
      "FR": "Point fin"
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0xA9": {
    "name": "DrawF ",
    "type": "command",
    "categories": [
      "Catalog > D",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "DrawFexpression[,color#]",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Draws `expression` (in terms of `X`) on the graph with specified\nColor#:10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "6:DrawF"
        ]
      }
    ],
    "localizations": {
      "FR": "DessFonct "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xA8": {
    "name": "DrawInv ",
    "type": "command",
    "categories": [
      "Catalog > D",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "DrawInvexpression[,color#]",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Draws the inverse of `expression` by plotting `X` values on the y-axis and `Y` values on the x-axis with specified\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "8:DrawInv"
        ]
      }
    ],
    "localizations": {
      "FR": "DessRecip "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xDB": {
    "name": "DS<(",
    "type": "function",
    "categories": [
      "Catalog > D",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "DS<(variable,value):commandA:commands",
        "arguments": [
          [
            "variable",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ],
          [
            "commandA",
            "",
            false
          ],
          [
            "commands",
            "",
            false
          ]
        ],
        "description": "Decrements `variable` by 1; skips `commandA` if `variable `< `value`.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "B:DS<("
        ]
      }
    ],
    "localizations": {
      "FR": "DS<("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x621A": {
    "name": "e",
    "type": "constant",
    "categories": [
      "Statistics > EQ"
    ],
    "syntaxes": [
      {
        "syntax": "e",
        "arguments": [],
        "description": "Returns decimal approximation of the constant `e`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[e]"
        ]
      }
    ],
    "localizations": {
      "FR": "e"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBF": {
    "name": "e^(",
    "type": "function",
    "categories": [
      "Catalog > Misc",
      "Keypad",
      "Math > Math"
    ],
    "syntaxes": [
      {
        "syntax": "e^(power)",
        "arguments": [
          [
            "power",
            "",
            false
          ]
        ],
        "description": "Returns `e` raised to `power`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[eˣ]"
        ]
      },
      {
        "syntax": "e^(list)",
        "arguments": [
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Returns a list of `e` raised to a `list` of powers.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[eˣ]"
        ]
      }
    ],
    "localizations": {
      "FR": "e^("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x3B": {
    "name": "ᴇ",
    "type": "function",
    "categories": [
      "Catalog > E",
      "Catalog > Misc",
      "Char > Other",
      "Keypad"
    ],
    "syntaxes": [
      {
        "syntax": "Exponent:valueᴇexponent",
        "arguments": [
          [
            "Exponent:",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ],
          [
            "ᴇ",
            "",
            false
          ],
          [
            "exponent",
            "",
            false
          ]
        ],
        "description": "Returns `value` times 10 to the `exponent`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[ᴇᴇ]"
        ]
      },
      {
        "syntax": "Exponent:listᴇexponent",
        "arguments": [
          [
            "Exponent:",
            "",
            false
          ],
          [
            "list",
            "list",
            false
          ],
          [
            "ᴇ",
            "",
            false
          ],
          [
            "exponent",
            "",
            false
          ]
        ],
        "description": "Returns `list` elements times 10 to the `exponent`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[ᴇᴇ]"
        ]
      },
      {
        "syntax": "Exponent:matrixᴇexponent",
        "arguments": [
          [
            "Exponent:",
            "",
            false
          ],
          [
            "matrix",
            "",
            false
          ],
          [
            "ᴇ",
            "",
            false
          ],
          [
            "exponent",
            "",
            false
          ]
        ],
        "description": "Returns `matrix` elements times 10 to the `exponent`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[ᴇᴇ]"
        ]
      }
    ],
    "localizations": {
      "FR": "ᴇ"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB06": {
    "name": "►Eff(",
    "type": "function",
    "categories": [
      "Catalog > E",
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "►Eff(nominal rate,compounding periods)",
        "arguments": [
          [
            "nominal rate",
            "",
            false
          ],
          [
            "compounding periods",
            "",
            false
          ]
        ],
        "description": "Computes the effective interest rate.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "C:►Eff("
        ]
      }
    ],
    "localizations": {
      "FR": "►Eff("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xD0": {
    "name": "Else",
    "type": "basic instruction only",
    "categories": [
      "Catalog > E",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "Else",
        "arguments": [],
        "description": "`See `If:Then:Else",
        "inEditorOnly": false,
        "location": [
          "[Else]"
        ]
      }
    ],
    "localizations": {
      "FR": "Else"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xD4": {
    "name": "End",
    "type": "basic instruction only",
    "categories": [
      "Catalog > E",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "End",
        "arguments": [],
        "description": "Identifies end of` For(`, `If`-`Then`-`Else`, `Repeat`, or `While` loop.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "7:End"
        ]
      }
    ],
    "localizations": {
      "FR": "End"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x68": {
    "name": "Eng",
    "type": "command",
    "categories": [
      "Catalog > E",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Eng",
        "arguments": [],
        "description": "Sets engineering display mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Eng"
        ]
      }
    ],
    "localizations": {
      "FR": "Ing"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB55": {
    "name": "Equ►String(",
    "type": "function",
    "categories": [
      "Catalog > E"
    ],
    "syntaxes": [
      {
        "syntax": "Equ►String(Y= var,Strn)",
        "arguments": [
          [
            "var",
            "",
            false
          ],
          [
            "n",
            "",
            false
          ]
        ],
        "description": "Converts the contents of a `Y=`` var` to a string and stores it in `Str``n`",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "Equ►String("
        ]
      }
    ],
    "localizations": {
      "FR": "Equ►Chaine("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF98": {
    "name": "eval(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "eval(expression)",
        "comment": "CE OS 5.2+",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ]
        ],
        "description": "Returns an evaluated expression as a string with 8 significant digits.  The expression must be real.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "C:eval("
        ]
      },
      {
        "syntax": "eval(expression)",
        "comment": "CE OS 5.2+",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ]
        ],
        "description": "Returns an evaluated expression as a string with 8 significant digits.  The expression must simplify to a real expression.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "6:eval("
        ],
        "specialCategory": "TI-Innovator™ Hub"
      }
    ],
    "localizations": {
      "FR": "eval("
    },
    "since": {
      "TI-84+CE": "5.2.0"
    }
  },
  "0xEF12": {
    "name": "ExecLib",
    "type": "action",
    "categories": [
      "Libraries"
    ],
    "syntaxes": [
      {
        "syntax": "ExecLib",
        "arguments": [],
        "description": "Extends TI-Basic (not available)",
        "inEditorOnly": true,
        "location": [
          "[ExecLib]"
        ]
      }
    ],
    "localizations": {
      "FR": "ExécBiblio"
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xBB2A": {
    "name": "expr(",
    "type": "function",
    "categories": [
      "Catalog > E"
    ],
    "syntaxes": [
      {
        "syntax": "expr(string)",
        "arguments": [
          [
            "string",
            "string",
            false
          ]
        ],
        "description": "Converts the character string contained in `string` to an expression and executes the expression. `string` can be a string or a string variable.",
        "inEditorOnly": true,
        "location": [
          "[expr]"
        ]
      }
    ],
    "localizations": {
      "FR": "expr("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xF5": {
    "name": "ExpReg ",
    "type": "command",
    "categories": [
      "Catalog > E",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "ExpReg [Xlistname,Ylistname,freqlist,regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Fits an exponential regression model to `Xlistname` and `Ylistname` with frequency `freqlist`, and stores the regression equation to `regequ`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "0:ExpReg"
        ]
      }
    ],
    "localizations": {
      "FR": "RegExp "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB51": {
    "name": "ExprOff",
    "type": "command",
    "categories": [
      "Catalog > E",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "ExprOff",
        "arguments": [],
        "description": "Turns off the expression display during TRACE.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "ExprOff"
        ]
      }
    ],
    "localizations": {
      "FR": "ExpNAff"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB50": {
    "name": "ExprOn",
    "type": "command",
    "categories": [
      "Catalog > E",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "ExprOn",
        "arguments": [],
        "description": "Turns on the expression display during TRACE.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "ExprOn"
        ]
      }
    ],
    "localizations": {
      "FR": "ExpAff"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB14": {
    "name": "𝐅cdf(",
    "type": "function",
    "categories": [
      "Catalog > C",
      "Catalog > F",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "𝐅cdf(lowerbound,upperbound,numerator df,denominator df)",
        "arguments": [
          [
            "𝐅",
            "",
            false
          ],
          [
            "lowerbound",
            "",
            false
          ],
          [
            "upperbound",
            "",
            false
          ],
          [
            "numerator df",
            "",
            false
          ],
          [
            "denominator df",
            "",
            false
          ]
        ],
        "description": "Computes the Û distribution probability between `lowerbound `and `upperbound` for the specified `numerator df` (degrees of freedom) and `denominator df`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "0:cdf("
        ]
      }
    ],
    "localizations": {
      "FR": "𝐅FRép("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF31": {
    "name": "►F◄►D",
    "type": "postfix operator",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "►F ◄►D",
        "arguments": [
          [
            "◄►",
            "",
            false
          ]
        ],
        "description": "Converts an answer from a fraction to a decimal or from a decimal to a fraction. Fraction and or decimal may be an approximation.",
        "inEditorOnly": false,
        "location": [
          "[alpha]",
          "[F1]",
          "4:"
        ]
      }
    ],
    "localizations": {
      "FR": "►F◄►D"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xE2": {
    "name": "Fill(",
    "type": "function",
    "categories": [
      "Catalog > F",
      "Matrix > Math"
    ],
    "syntaxes": [
      {
        "syntax": "Fill(value,matrixname)",
        "arguments": [
          [
            "value",
            "",
            false
          ],
          [
            "matrixname",
            "",
            false
          ]
        ],
        "description": "Stores `value` to each element in `matrixname`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "4:Fill("
        ]
      },
      {
        "syntax": "Fill(value,listname)",
        "arguments": [
          [
            "value",
            "",
            false
          ],
          [
            "listname",
            "list",
            false
          ]
        ],
        "description": "Stores `value` to each element in `listname`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "4:Fill("
        ]
      }
    ],
    "localizations": {
      "FR": "Remplir("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x73": {
    "name": "Fix ",
    "type": "command",
    "categories": [
      "Catalog > F",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Fix #",
        "arguments": [
          [
            "#",
            "",
            false
          ]
        ],
        "description": "Sets fixed-decimal mode for # of decimal places.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "0123456789"
        ]
      }
    ],
    "localizations": {
      "FR": "Fixe "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x69": {
    "name": "Float",
    "type": "command",
    "categories": [
      "Catalog > F",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Float",
        "arguments": [],
        "description": "Sets floating decimal mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Float"
        ]
      }
    ],
    "localizations": {
      "FR": "Flottant"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x28": {
    "name": "fMax(",
    "type": "function",
    "categories": [
      "Catalog > F",
      "Math > Math"
    ],
    "syntaxes": [
      {
        "syntax": "fMax(expression,variable,lower,upper[,tolerance])",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ],
          [
            "variable",
            "",
            false
          ],
          [
            "lower",
            "",
            false
          ],
          [
            "upper",
            "",
            false
          ],
          [
            "tolerance",
            "",
            true
          ]
        ],
        "description": "Returns the value of `variable` where the local maximum of `expression` occurs, between `lower` and `upper`,with specified `tolerance`.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "MATH",
          "7:fMax("
        ]
      }
    ],
    "localizations": {
      "FR": "fMax("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x27": {
    "name": "fMin(",
    "type": "function",
    "categories": [
      "Catalog > F",
      "Math > Math"
    ],
    "syntaxes": [
      {
        "syntax": "fMin(expression,variable,lower,upper[,tolerance])",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ],
          [
            "variable",
            "",
            false
          ],
          [
            "lower",
            "",
            false
          ],
          [
            "upper",
            "",
            false
          ],
          [
            "tolerance",
            "",
            true
          ]
        ],
        "description": "Returns the value of `variable` where the local minimum of `expression` occurs, between `lower` and `upper`, with specified `tolerance`.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "MATH",
          "6:fMin("
        ]
      }
    ],
    "localizations": {
      "FR": "fMin("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x24": {
    "name": "fnInt(",
    "type": "function",
    "categories": [
      "Catalog > F",
      "Math > Math"
    ],
    "syntaxes": [
      {
        "syntax": "fnInt(expression,variable,lower,upper[,tolerance])",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ],
          [
            "variable",
            "",
            false
          ],
          [
            "lower",
            "",
            false
          ],
          [
            "upper",
            "",
            false
          ],
          [
            "tolerance",
            "",
            true
          ]
        ],
        "description": "Returns the function integral of `expression` with respect to `variable`, between `lower` and `upper`, with specified `tolerance`.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "MATH",
          "9:fnInt("
        ]
      }
    ],
    "localizations": {
      "FR": "fnInt("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x97": {
    "name": "FnOff ",
    "type": "command",
    "categories": [
      "Catalog > F",
      "Y= Functions > On/Off"
    ],
    "syntaxes": [
      {
        "syntax": "FnOff [function#,function#,...,function n]",
        "arguments": [
          [
            "function#",
            "",
            true
          ],
          [
            "function#",
            "",
            true
          ],
          [
            "function n",
            "",
            true
          ]
        ],
        "description": "Deselects all `Y=` functions or specified `Y=` functions.",
        "inEditorOnly": false,
        "location": [
          "[vars]",
          "Y-VARS",
          "4:On/Off2:FnOff"
        ]
      }
    ],
    "localizations": {
      "FR": "FonctNAff "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x96": {
    "name": "FnOn ",
    "type": "command",
    "categories": [
      "Catalog > F",
      "Y= Functions > On/Off"
    ],
    "syntaxes": [
      {
        "syntax": "FnOn [function#,function#,...,function n]",
        "arguments": [
          [
            "function#",
            "",
            true
          ],
          [
            "function#",
            "",
            true
          ],
          [
            "function n",
            "",
            true
          ]
        ],
        "description": "Selects all `Y=` functions or specified `Y=` functions.",
        "inEditorOnly": false,
        "location": [
          "[vars]",
          "Y-VARS",
          "4:On/Off1:FnOn"
        ]
      }
    ],
    "localizations": {
      "FR": "FonctAff "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xD3": {
    "name": "For(",
    "type": "for",
    "categories": [
      "Catalog > F",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": ":For(variable,begin,end[,increment]):commands:End:commands",
        "arguments": [
          [
            "variable",
            "",
            false
          ],
          [
            "begin",
            "",
            false
          ],
          [
            "end",
            "",
            false
          ],
          [
            "increment",
            "",
            true
          ],
          [
            "commands",
            "",
            true
          ],
          [
            "commands",
            "",
            true
          ]
        ],
        "description": "Executes `commands` through `End`, incrementing `variable` from `begin` by `increment`  until `variable`>`end`.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "4:For("
        ]
      }
    ],
    "localizations": {
      "FR": "For("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBA": {
    "name": "fPart(",
    "type": "function",
    "categories": [
      "Catalog > F",
      "Math > Number"
    ],
    "syntaxes": [
      {
        "syntax": "fPart(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the fractional part or parts of a real or complex number, expression, list, or matrix.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "4:fPart("
        ]
      }
    ],
    "localizations": {
      "FR": "partDéc("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB1E": {
    "name": "𝐅pdf(",
    "type": "function",
    "categories": [
      "Catalog > F",
      "Catalog > P",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "𝐅pdf(x,numerator df,denominator df)",
        "arguments": [
          [
            "𝐅",
            "",
            false
          ],
          [
            "x",
            "",
            false
          ],
          [
            "numerator df",
            "",
            false
          ],
          [
            "denominator df",
            "",
            false
          ]
        ],
        "description": "Computes the Û distribution probability between `lowerbound `and `upperbound` for the specified `numerator df` (degrees of freedom) and `denominator df`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "9:pdf("
        ]
      }
    ],
    "localizations": {
      "FR": "𝐅fdp("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x3": {
    "name": "►Frac",
    "type": "conversion",
    "categories": [
      "Catalog > F",
      "Math > Math"
    ],
    "syntaxes": [
      {
        "syntax": "value►Frac",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Displays a real or complex number, expression, list, or matrix as a fraction simplified to its simplest terms.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "MATH",
          "1:Frac"
        ]
      }
    ],
    "localizations": {
      "FR": "►Frac"
    }
  },
  "0x75": {
    "name": "Full",
    "type": "command",
    "categories": [
      "Catalog > F",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Full",
        "arguments": [],
        "description": "Sets full screen mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Full"
        ]
      }
    ],
    "localizations": {
      "FR": "PleinEcr"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x76": {
    "name": "Func",
    "type": "command",
    "categories": [
      "Catalog > F",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Func",
        "arguments": [],
        "description": "Sets function graphing mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Func"
        ]
      }
    ],
    "localizations": {
      "FR": "Fonct"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBBCB": {
    "name": "GarbageCollect",
    "type": "command",
    "categories": [
      "Catalog > G"
    ],
    "syntaxes": [
      {
        "syntax": "GarbageCollect",
        "arguments": [],
        "description": "Displays the garbage collection menu to allow cleanup of unused archive memory.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "GarbageCollect"
        ]
      }
    ],
    "localizations": {
      "FR": "RéorganiserMém"
    },
    "since": {
      "TI-83+": "1.03"
    }
  },
  "0xBB09": {
    "name": "gcd(",
    "type": "function",
    "categories": [
      "Catalog > G",
      "Math > Number"
    ],
    "syntaxes": [
      {
        "syntax": "gcd(valueA,valueB)",
        "arguments": [
          [
            "valueA",
            "",
            false
          ],
          [
            "valueB",
            "",
            false
          ]
        ],
        "description": "Returns the greatest common divisor of `valueA` and `valueB`, which can be real numbers or lists.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "9:gcd("
        ]
      }
    ],
    "localizations": {
      "FR": "pgcd("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB1A": {
    "name": "geometcdf(",
    "type": "function",
    "categories": [
      "Catalog > G",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "geometcdf(p,x)",
        "arguments": [
          [
            "p",
            "",
            false
          ],
          [
            "x",
            "",
            false
          ]
        ],
        "description": "Computes a cumulative probability at `x`, the number of the trial on which the first success occurs, for the discrete geometric distribution with the specified probability of success `p.`",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "F:geometcdf("
        ]
      }
    ],
    "localizations": {
      "FR": "géomtFRép("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB19": {
    "name": "geometpdf(",
    "type": "function",
    "categories": [
      "Catalog > G",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "geometpdf(p,x)",
        "arguments": [
          [
            "p",
            "",
            false
          ],
          [
            "x",
            "",
            false
          ]
        ],
        "description": "Computes a probability at `x`, the number of the trial on which the first success occurs, for the discrete geometric distribution with the specified probability of success `p.`",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "E:geometpdf("
        ]
      }
    ],
    "localizations": {
      "FR": "géomtFdp("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xE8": {
    "name": "Get(",
    "type": "function",
    "categories": [
      "Catalog > G",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "Get(variable)",
        "arguments": [
          [
            "variable",
            "",
            false
          ]
        ],
        "description": "Retrieves a value from a connected TI-Innovator™ Hub and stores the data to a variable on the receiving CE calculator.\nNote: See also Send( and eval(",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "A:Get("
        ]
      },
      {
        "syntax": "Get(variable",
        "arguments": [
          [
            "variable",
            "",
            false
          ]
        ],
        "description": "Retrieves a value from a connected TI-Innovator™ Hub and stores the data to a variable on the receiving CE calculator.\nNote: See also Send( and eval(",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "HUB",
          "5:Get"
        ],
        "specialCategory": "Ti-Innovator™ Hub"
      }
    ],
    "localizations": {
      "FR": "Capt("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB53": {
    "name": "GetCalc(",
    "type": "function",
    "categories": [
      "Catalog > G",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "GetCalc(variable[,portflag])",
        "arguments": [
          [
            "variable",
            "",
            false
          ],
          [
            "portflag",
            "",
            true
          ]
        ],
        "description": "Gets contents of `variable` on another TI-84 Plus CE and stores it to `variable` on the receiving TI-84 Plus CE. By default, the TI-84 Plus CE uses the USB port if it is connected. If the USB cable is not connected, it uses the I/O port.`portflag`=0 use USB port if connected;`portflag`=1 use USB port;`portflag`=2 use I/O port.(Ignored when program runs on the TI-84 Plus CE.)",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "0:GetCalc("
        ]
      }
    ],
    "localizations": {
      "FR": "GetCalc("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF09": {
    "name": "getDate",
    "type": "constant",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "getDate",
        "arguments": [],
        "description": "Returns a list giving the date according to the current value of the clock. The list is in {year,month,day} format.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "getDate"
        ]
      }
    ],
    "localizations": {
      "FR": "affDate"
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xEF0C": {
    "name": "getDtFmt",
    "type": "constant",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "getDtFmt",
        "arguments": [],
        "description": "Returns an integer representing the date format that is currently set on the device.\n1 = M/D/Y2 = D/M/Y3 = Y/M/D",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "getDtFmt"
        ]
      }
    ],
    "localizations": {
      "FR": "affFmtDt"
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xEF07": {
    "name": "getDtStr(",
    "type": "function",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "getDtStr(integer)",
        "arguments": [
          [
            "integer",
            "",
            false
          ]
        ],
        "description": "Returns a string of the current date in the format specified by `integer`, where:\n1 = M/D/Y2 = D/M/Y3 = Y/M/D",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "getDtStr("
        ]
      }
    ],
    "localizations": {
      "FR": "AffChDt("
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xEF0A": {
    "name": "getTime",
    "type": "constant",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "getTime",
        "arguments": [],
        "description": "Returns a list giving the time according to the current value of the clock. The list is in {hour,minute,second} format. The time is returned in the 24 hour format.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "getTime"
        ]
      }
    ],
    "localizations": {
      "FR": "affHeure"
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xEF0D": {
    "name": "getTmFmt",
    "type": "constant",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "getTmFmt",
        "arguments": [],
        "description": "Returns an integer representing the clock time format that is currently set on the device.\n12 = 12 hour format24 = 24 hour format",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "getTmFmt"
        ]
      }
    ],
    "localizations": {
      "FR": "affFmtHr"
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xEF08": {
    "name": "getTmStr(",
    "type": "function",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "getTmStr(integer)",
        "arguments": [
          [
            "integer",
            "",
            false
          ]
        ],
        "description": "Returns a string of the current clock time in the format specified by `integer`, where:\n12 = 12 hour format24 = 24 hour format",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "getTmStr("
        ]
      }
    ],
    "localizations": {
      "FR": "affChHr("
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xAD": {
    "name": "getKey",
    "type": "constant",
    "categories": [
      "Catalog > G",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "getKey",
        "arguments": [],
        "description": "Returns the key code for the current keystroke, or `0`, if no key is pressed.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "7:getKey"
        ]
      }
    ],
    "localizations": {
      "FR": "codetouch("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xD7": {
    "name": "Goto ",
    "type": "goto",
    "categories": [
      "Catalog > G",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "Gotolabel",
        "arguments": [
          [
            "label",
            "",
            false
          ]
        ],
        "description": "Transfers control to `label`.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "0:Goto"
        ]
      }
    ],
    "localizations": {
      "FR": "Goto "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF65": {
    "name": "GraphColor(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "GraphColor(function#,color#)",
        "arguments": [
          [
            "function#",
            "",
            false
          ],
          [
            "color#",
            "colorNum",
            false
          ]
        ],
        "description": "Sets the color for `function#`.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "H:GraphColor("
        ]
      }
    ],
    "localizations": {
      "FR": "CouleurGraph("
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0xBB45": {
    "name": "GraphStyle(",
    "type": "function",
    "categories": [
      "Catalog > G",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "GraphStyle(function#,graphstyle#)",
        "arguments": [
          [
            "function#",
            "",
            false
          ],
          [
            "graphstyle#",
            "",
            false
          ]
        ],
        "description": "Sets a `graphstyle` for `function#`.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "H:GraphStyle("
        ]
      }
    ],
    "localizations": {
      "FR": "GraphStyle("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x7E0A": {
    "name": "GridDot ",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "GridDot [color#]",
        "arguments": [
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Turns on grid dots in the graph area in the specified color.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "GridDot"
        ]
      }
    ],
    "localizations": {
      "FR": "GridDot "
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0xEF5A": {
    "name": "GridLine ",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "GridLine [color#]",
        "comment": "",
        "arguments": [
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Turns on grid lines in the graph area in the specified color.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "GridLine"
        ]
      }
    ],
    "localizations": {
      "FR": "LigneAff "
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0x7E0B": {
    "name": "GridOff",
    "type": "command",
    "categories": [
      "Catalog > G",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "GridOff",
        "arguments": [],
        "description": "Turns off grid format.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "GridOff"
        ]
      }
    ],
    "localizations": {
      "FR": "QuadNAff"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB64": {
    "name": "G-T",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "G-T",
        "arguments": [],
        "description": "Sets graph-table vertical split-screen mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "GRAPH-TABLE"
        ]
      }
    ],
    "localizations": {
      "FR": "G-T"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xFC": {
    "name": "Histogram",
    "type": "constant",
    "categories": [
      "Catalog > H",
      "Stat Plot > Type"
    ],
    "syntaxes": [
      {
        "syntax": "Plot#(type,Xlist[,freqlist,color#])",
        "arguments": [
          [
            "type",
            "Histogram token",
            false
          ],
          [
            "Xlist",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            false
          ],
          [
            "color#",
            "colorNum",
            false
          ]
        ],
        "description": "Used as the \"type\" argument in the command\nWhere # gives Plot1, Plot2 or Plot3.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[stat plot]",
          "TYPE"
        ]
      }
    ],
    "localizations": {
      "FR": "Histogramme"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x74": {
    "name": "Horiz",
    "type": "command",
    "categories": [
      "Catalog > H",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Horiz",
        "arguments": [],
        "description": "Sets horizontal split-screen mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Horiz"
        ]
      }
    ],
    "localizations": {
      "FR": "Horiz"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xA6": {
    "name": "Horizontal ",
    "type": "command",
    "categories": [
      "Catalog > H",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Horizontal y[,color#,linestyle#]",
        "arguments": [
          [
            "y",
            "",
            false
          ],
          [
            "color#",
            "colorNum",
            true
          ],
          [
            "linestyle#",
            "number",
            true
          ]
        ],
        "description": "Draws a horizontal line at `y` in a specified\nColor#: 10 - 24 or color name pasted from [vars] COLOR.\nline style #: 1-4.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "3:Horizontal"
        ]
      }
    ],
    "localizations": {
      "FR": "Horizontale "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x2C": {
    "name": "𝑖",
    "type": "constant",
    "categories": [
      "Catalog > I",
      "Catalog > Misc",
      "Keypad"
    ],
    "syntaxes": [
      {
        "syntax": "i",
        "comment": "Complex i",
        "arguments": [],
        "description": "Returns the complex number `i`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[𝑖]"
        ]
      }
    ],
    "localizations": {
      "FR": "𝑖"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xB4": {
    "name": "identity(",
    "type": "function",
    "categories": [
      "Catalog > I",
      "Matrix > Math"
    ],
    "syntaxes": [
      {
        "syntax": "identity(dimension)",
        "arguments": [
          [
            "dimension",
            "",
            false
          ]
        ],
        "description": "Returns the identity matrix of `dimension` rows x `dimension` columns.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "5:identity("
        ]
      }
    ],
    "localizations": {
      "FR": "identité("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xCE": {
    "name": "If ",
    "type": "if",
    "categories": [
      "Catalog > I",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "If condition:commandA:commands",
        "arguments": [
          [
            "condition",
            "",
            false
          ],
          [
            "commandA",
            "",
            false
          ],
          [
            "commands",
            "",
            false
          ]
        ],
        "description": "If `condition` = 0 (false), skips `commandA`.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "1:If"
        ]
      },
      {
        "specificName": "If Then End",
        "syntax": "If:conditionThen:commandsEnd:commands",
        "arguments": [
          [
            ":",
            "",
            false
          ],
          [
            "condition",
            "",
            false
          ],
          [
            "commands",
            "",
            false
          ],
          [
            "commands",
            "",
            false
          ]
        ],
        "description": "Executes `commands` from `Then` to `End` if `condition` = 1 (true).",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "2:Then"
        ]
      },
      {
        "specificName": "If Then Else End",
        "syntax": "If:conditionThen:commandsElse:commandsEnd:commands",
        "arguments": [
          [
            "condition",
            "",
            false
          ],
          [
            "commands",
            "",
            false
          ],
          [
            "commands",
            "",
            false
          ],
          [
            "commands",
            "",
            false
          ]
        ],
        "description": "Executes `commands` from `Then` to `Else` if `condition` = 1 (true); from `Else` to `End` if `condition` = 0 (false).",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "3:Else"
        ]
      }
    ],
    "localizations": {
      "FR": "If "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB27": {
    "name": "imag(",
    "type": "function",
    "categories": [
      "Catalog > I",
      "Math > Complex"
    ],
    "syntaxes": [
      {
        "syntax": "imag(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the imaginary (non-real) part of a complex number or list of complex numbers.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "CMPLX",
          "3:imag("
        ]
      }
    ],
    "localizations": {
      "FR": "imag("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF95": {
    "name": "invBinom(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "invBinom(area,trial,p)",
        "comment": "CE OS 5.2+",
        "arguments": [
          [
            "area",
            "",
            false
          ],
          [
            "trial",
            "",
            false
          ],
          [
            "p",
            "",
            false
          ]
        ],
        "description": "The inverse binomial cumulative distribution function results in the minimum number of successes, such that the cumulative probability for that minimum number of successes ≥ the given cumulative probability (area).  If more information is needed, also find the binomcdf for the result from invBinom( as shown below for a full analysis.\nDetails:\nAssume the toss of a fair coin 30 times.  What is the minimum number of heads you must observe such that the cumulative probability for that number of observed heads is at least 0.95?\nThe results on the screen first show that the minimum number of successes to obtain at least the given cumulative probability of 0.95 is 19.  Next, the cumulative probability for up to 19 is computed using binomcdf( and is approximately 0.9506314271 which meets the criteria of  0.9506314271≥0.95\n\nAlternate Method:\nSet Y1=binomcdf(30,0.5,X) and use the table of values (starting at 0 and increment by 1) to find when the cumulative probability is at or just above the given cumulative probability.  This gives you a view of all values to make decisions.  For this example, search in the table to find the cumulative probability just larger than 0.95.  Again, the number of successes is 19.\n",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "C:invBinom("
        ]
      }
    ],
    "localizations": {
      "FR": "invBinom("
    },
    "since": {
      "TI-84+CE": "5.0.0"
    }
  },
  "0x7B": {
    "name": "IndpntAsk",
    "type": "command",
    "categories": [
      "Catalog > I",
      "Table Settings"
    ],
    "syntaxes": [
      {
        "syntax": "IndpntAsk",
        "arguments": [],
        "description": "Sets table to ask for independent-variable values.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[tblset]",
          "Indpnt: Ask"
        ]
      }
    ],
    "localizations": {
      "FR": "ValeursDem"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x7A": {
    "name": "IndpntAuto",
    "type": "command",
    "categories": [
      "Catalog > I",
      "Table Settings"
    ],
    "syntaxes": [
      {
        "syntax": "IndpntAuto",
        "arguments": [],
        "description": "Sets table to generate independent-variable values automatically.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[tblset]",
          "Indpnt: Auto"
        ]
      }
    ],
    "localizations": {
      "FR": "ValeursAuto"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xDC": {
    "name": "Input ",
    "type": "command",
    "categories": [
      "Catalog > I",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "Input",
        "arguments": [],
        "description": "Displays graph.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "2:Input"
        ]
      },
      {
        "syntax": "Input [variable]",
        "arguments": [
          [
            "variable",
            "",
            true
          ]
        ],
        "description": "Prompts for value to store to `variable`.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "2:Input"
        ]
      },
      {
        "syntax": "Input [Strn,variable]",
        "arguments": [
          [
            "n",
            "",
            true
          ],
          [
            "variable",
            "",
            true
          ]
        ],
        "description": "Displays `Str``n` and stores entered value to `variable`.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "2:Input"
        ]
      }
    ],
    "localizations": {
      "FR": "Input "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB0F": {
    "name": "inString(",
    "type": "function",
    "categories": [
      "Catalog > I"
    ],
    "syntaxes": [
      {
        "syntax": "inString(string,substring[,start])",
        "arguments": [
          [
            "string",
            "string",
            false
          ],
          [
            "substring",
            "",
            false
          ],
          [
            "start",
            "",
            true
          ]
        ],
        "description": "Returns the character position in `string` of the first character of `substring `beginning at `start`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "inString("
        ]
      }
    ],
    "localizations": {
      "FR": "carChaine("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xB1": {
    "name": "int(",
    "type": "function",
    "categories": [
      "Catalog > I",
      "Math > Number"
    ],
    "syntaxes": [
      {
        "syntax": "int(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the largest integer  a real or complex number, expression, list, or matrix.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "5:int("
        ]
      }
    ],
    "localizations": {
      "FR": "partEnt("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB04": {
    "name": "ΣInt(",
    "type": "function",
    "categories": [
      "Catalog > I",
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "ΣInt(pmt1,pmt2[,roundvalue])",
        "arguments": [
          [
            "Σ",
            "",
            false
          ],
          [
            "pmt1",
            "",
            false
          ],
          [
            "pmt2",
            "",
            true
          ],
          [
            "roundvalue",
            "",
            true
          ]
        ],
        "description": "Computes the sum, rounded to `roundvalue`, of the interest amount between `pmt1` and `pmt2` for an amortization schedule.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "A:Int("
        ]
      }
    ],
    "localizations": {
      "FR": "ΣInt("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB11": {
    "name": "invNorm(",
    "type": "function",
    "categories": [
      "Catalog > I",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "invNorm(area[,µ,σ,tail])",
        "arguments": [
          [
            "area",
            "",
            false
          ],
          [
            "µ",
            "",
            false
          ],
          [
            "σ",
            "",
            false
          ],
          [
            "tail",
            "",
            false
          ]
        ],
        "description": "Computes the inverse cumulative normal distribution function for a given area under the normal distribution curve specified by m and s.. The optional argument tail can be LEFT (-∞,-a), CENTER [-a,a] or RIGHT (a, ∞) for Real a.\nThe tokens LEFT, CENTER and RIGHT can be found in [catalog].",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "3:invNorm("
        ]
      }
    ],
    "localizations": {
      "FR": "FracNormale("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF92": {
    "name": "LEFT",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "LEFT",
        "comment": "CE OS 5.2+",
        "arguments": [],
        "description": "LEFT is a tail argument for the invNorm( command where the optional argument tail can be LEFT (-∞,-a), CENTER [-a,a] or RIGHT (a, ∞) for Real a.\nSee also invNorm(.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]"
        ]
      }
    ],
    "localizations": {
      "FR": "GAUCHE"
    },
    "since": {
      "TI-84+CE": "5.0.0"
    }
  },
  "0xEF94": {
    "name": "RIGHT",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "RIGHT",
        "comment": "CE OS 5.2+",
        "arguments": [],
        "description": "RIGHT is a tail argument for the invNorm( command where the optional argument tail can be LEFT (-∞,-a), CENTER [-a,a] or RIGHT (a, ∞) for Real a.\nSee also invNorm(.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]"
        ]
      }
    ],
    "localizations": {
      "FR": "DROITE"
    },
    "since": {
      "TI-84+CE": "5.0.0"
    }
  },
  "0xEF93": {
    "name": "CENTER",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "CENTER",
        "comment": "CE OS 5.2+",
        "arguments": [],
        "description": "CENTER is a tail argument for the invNorm( command where the optional argument tail can be LEFT (-∞,-a), CENTER [-a,a] or RIGHT (a, ∞) for Real a.\nSee also invNorm(.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]"
        ]
      }
    ],
    "localizations": {
      "FR": "CENTRE"
    },
    "since": {
      "TI-84+CE": "5.0.0"
    }
  },
  "0xEF13": {
    "name": "invT(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "invT(area,df)",
        "arguments": [
          [
            "area",
            "",
            false
          ],
          [
            "df",
            "",
            false
          ]
        ],
        "description": "Computes the inverse cumulative student-t probability function specified by degree of freedom, df for a given area under the curve.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "4:invT("
        ]
      }
    ],
    "localizations": {
      "FR": "invT("
    },
    "since": {
      "TI-84+": "2.30"
    }
  },
  "0xB9": {
    "name": "iPart(",
    "type": "function",
    "categories": [
      "Catalog > I",
      "Math > Number"
    ],
    "syntaxes": [
      {
        "syntax": "iPart(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the integer part of a real or complex number, expression, list, or matrix.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "3:iPart("
        ]
      }
    ],
    "localizations": {
      "FR": "ent("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB01": {
    "name": "irr(",
    "type": "function",
    "categories": [
      "Catalog > I",
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "irr(CF0,CFList[,CFFreq])",
        "arguments": [
          [
            "CF0",
            "",
            false
          ],
          [
            "CFList",
            "",
            false
          ],
          [
            "CFFreq",
            "",
            true
          ]
        ],
        "description": "Returns the interest rate at which the net present value of the cash flow is equal to zero.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "8:irr("
        ]
      }
    ],
    "localizations": {
      "FR": "tauxRi("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF0E": {
    "name": "isClockOn",
    "type": "constant",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "isClockOn",
        "arguments": [],
        "description": "Identifies if clock is ON or OFF. Returns 1 if the clock is ON. Returns 0 if the clock is OFF.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "isClockOn"
        ]
      }
    ],
    "localizations": {
      "FR": "actHorl"
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xDA": {
    "name": "IS>(",
    "type": "function",
    "categories": [
      "Catalog > I",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": ":IS>(variable,value) :commandA:commands",
        "comment": ":commandA,:commands",
        "arguments": [
          [
            "variable",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ],
          [
            "commandA",
            "",
            false
          ],
          [
            "commands",
            "",
            false
          ]
        ],
        "description": "Increments `variable` by 1; skips `commandA` if `variable`>`value`.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "A:IS>("
        ]
      }
    ],
    "localizations": {
      "FR": "IS>("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEB": {
    "name": "⌊",
    "type": "other",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "⌊listname",
        "arguments": [
          [
            "listname",
            "list",
            false
          ]
        ],
        "description": "Identifies the next one to five characters as a user-created list name.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "B:"
        ]
      }
    ],
    "localizations": {
      "FR": "⌊"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x7E0D": {
    "name": "LabelOff",
    "type": "command",
    "categories": [
      "Catalog > L",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "LabelOff",
        "arguments": [],
        "description": "Turns off axes labels.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "LabelOff"
        ]
      }
    ],
    "localizations": {
      "FR": "EtiqNAff"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x7E0C": {
    "name": "LabelOn",
    "type": "command",
    "categories": [
      "Catalog > L",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "LabelOn",
        "arguments": [],
        "description": "Turns on axes labels.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "LabelOn"
        ]
      }
    ],
    "localizations": {
      "FR": "EtiqAff"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xD6": {
    "name": "Lbl ",
    "type": "label",
    "categories": [
      "Catalog > L",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "Lbl label",
        "arguments": [
          [
            "label",
            "",
            false
          ]
        ],
        "description": "Creates a `label` of one or two characters.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "9:Lbl"
        ]
      }
    ],
    "localizations": {
      "FR": "Lbl "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB08": {
    "name": "lcm(",
    "type": "function",
    "categories": [
      "Catalog > L",
      "Math > Number"
    ],
    "syntaxes": [
      {
        "syntax": "lcm(valueA,valueB)",
        "arguments": [
          [
            "valueA",
            "",
            false
          ],
          [
            "valueB",
            "",
            false
          ]
        ],
        "description": "Returns the least common multiple of `valueA` and `valueB`, which can be real numbers or lists.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "8:lcm("
        ]
      }
    ],
    "localizations": {
      "FR": "ppcm("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB2B": {
    "name": "length(",
    "type": "function",
    "categories": [
      "Catalog > L"
    ],
    "syntaxes": [
      {
        "syntax": "length(string)",
        "arguments": [
          [
            "string",
            "string",
            false
          ]
        ],
        "description": "Returns the number of characters in `string`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "length("
        ]
      }
    ],
    "localizations": {
      "FR": "longueur("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x9C": {
    "name": "Line(",
    "type": "function",
    "categories": [
      "Catalog > L",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Line(X1,Y1,X2,Y2[,erase#,color#,linestyle#])",
        "arguments": [
          [
            "X1",
            "",
            false
          ],
          [
            "Y1",
            "",
            false
          ],
          [
            "X2",
            "",
            false
          ],
          [
            "Y2",
            "",
            false
          ],
          [
            "erase#",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ],
          [
            "linestyle#",
            "number",
            true
          ]
        ],
        "description": "Draws a line from (`X1`,`Y1`) to (`X2`,`Y2`) with the following options: erase #: 1,0, color #: 10-24, and line style #: 1-4.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "2:Line("
        ]
      },
      {
        "syntax": "Line(X1,Y1,X2,Y2,0[,line#])",
        "arguments": [
          [
            "X1",
            "",
            false
          ],
          [
            "Y1",
            "",
            false
          ],
          [
            "X2",
            "",
            false
          ],
          [
            "Y2",
            "",
            false
          ],
          [
            "line#",
            "",
            true
          ]
        ],
        "description": "Erases a line (erase #: 1,0) from (`X1`,`Y1`) to (`X2`,`Y2`).",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "2:Line("
        ]
      }
    ],
    "localizations": {
      "FR": "Ligne("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xF4": {
    "name": "LinReg(a+bx) ",
    "type": "command",
    "categories": [
      "Catalog > L",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "LinReg(a+bx) [Xlistname,Ylistname,freqlist,regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Fits a linear regression model to` Xlistname` and `Ylistname` with frequency `freqlist`, and stores the regression equation to `regequ`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "8:LinReg(a+bx)"
        ]
      }
    ],
    "localizations": {
      "FR": "RegLin(a+bx) "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xFF": {
    "name": "LinReg(ax+b) ",
    "type": "function",
    "categories": [
      "Catalog > L",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "LinReg(ax+b) [Xlistname,Ylistname,freqlist,regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Fits a linear regression model to` Xlistname` and `Ylistname` with frequency `freqlist`, and stores the regression equation to `regequ`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "4:LinReg(ax+b)"
        ]
      }
    ],
    "localizations": {
      "FR": "RegLin(ax+b) "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF15": {
    "name": "LinRegTInt ",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "LinRegTInt [Xlistname,Ylistname,freqlist,confidence level, regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "confidence level",
            "",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Performs a linear regression and computes the t confidence interval for the slope coefficient b.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "G:LinRegTInt"
        ]
      }
    ],
    "localizations": {
      "FR": "LinRegTInt "
    },
    "since": {
      "TI-84+": "2.30"
    }
  },
  "0xBB34": {
    "name": "LinRegTTest ",
    "type": "command",
    "categories": [
      "Catalog > L",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "LinRegTTest [Xlistname,Ylistname,freqlist,alternative,regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Performs a linear regression and a `t`-test. `alternative`=-`1` is <; `alternative`=`0` is ; `alternative`=`1` is >.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "F:LinRegTTest"
        ]
      }
    ],
    "localizations": {
      "FR": "RegLinTTest "
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB2C": {
    "name": "ΔList(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "ΔList(list)",
        "arguments": [
          [
            "Δ",
            "",
            false
          ],
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Returns a list containing the differences between consecutive elements in `list`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "7:List("
        ]
      }
    ],
    "localizations": {
      "FR": "Δliste("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB3A": {
    "name": "List►matr(",
    "type": "function",
    "categories": [
      "Catalog > L",
      "List > Ops"
    ],
    "syntaxes": [
      {
        "syntax": "List►matr(listname1,...,listname n,matrixname)",
        "arguments": [
          [
            "listname1",
            "listName",
            false
          ],
          [
            "...",
            "",
            false
          ],
          [
            "listname n",
            "list",
            false
          ],
          [
            "matrixname",
            "",
            false
          ]
        ],
        "description": "Fills `matrixname` column by column with the elements from each specified `listname`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "0:List",
          "matr("
        ]
      }
    ],
    "localizations": {
      "FR": "List►matr("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBE": {
    "name": "ln(",
    "type": "function",
    "categories": [
      "Catalog > L",
      "Keypad",
      "Math > Math"
    ],
    "syntaxes": [
      {
        "syntax": "ln(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the natural logarithm of a real or complex number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[ln]"
        ]
      }
    ],
    "localizations": {
      "FR": "ln("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xF6": {
    "name": "LnReg ",
    "type": "command",
    "categories": [
      "Catalog > L",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "LnReg [Xlistname,Ylistname,freqlist,regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Fits a logarithmic regression model to `Xlistname` and `Ylistname` with frequency `freqlist`, and stores the regression equation to `regequ`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "9:LnReg"
        ]
      }
    ],
    "localizations": {
      "FR": "RegLn "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xC0": {
    "name": "log(",
    "type": "function",
    "categories": [
      "Catalog > L",
      "Keypad",
      "Math > Math"
    ],
    "syntaxes": [
      {
        "syntax": "log(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns logarithm of a real or complex number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[log]"
        ]
      }
    ],
    "localizations": {
      "FR": "log("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF34": {
    "name": "logBASE(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "logBASE(value, base)",
        "arguments": [
          [
            "value",
            "",
            false
          ],
          [
            "base",
            "",
            false
          ]
        ],
        "description": "Returns the logarithm of a specifed value determined from a specified base: logBASE(value, base).",
        "inEditorOnly": false,
        "location": [
          "[logBASE]"
        ]
      }
    ],
    "localizations": {
      "FR": "logBASE("
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xBB33": {
    "name": "Logistic ",
    "type": "command",
    "categories": [
      "Catalog > L",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "Logistic [Xlistname,Ylistname,freqlist,regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Fits a logistic regression model to` Xlistname `and `Ylistname` with frequency `freqlist`, and stores the regression equation to `regequ`.",
        "inEditorOnly": false,
        "location": [
          "CALC",
          "B:Logistic"
        ]
      }
    ],
    "localizations": {
      "FR": "Logistique "
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF16": {
    "name": "Manual-Fit ",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "Manual-Fit[equname,color#,line style#]",
        "arguments": [
          [
            "equname",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ],
          [
            "line style#",
            "",
            true
          ]
        ],
        "description": "Fits a linear equation to a scatter plot with specified color and line style.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.\nline style #: 1-4.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "D:Manual-Fit"
        ]
      }
    ],
    "localizations": {
      "FR": "Manual-Fit "
    },
    "since": {
      "TI-84+": "0.46"
    }
  },
  "0xEF37": {
    "name": "MATHPRINT",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "MATHPRINT",
        "arguments": [],
        "description": "Displays most entries and answers the way they are displayed in textbooks, such as .",
        "inEditorOnly": false,
        "location": [
          "[MATHPRINT]"
        ]
      }
    ],
    "localizations": {
      "FR": "MATHPRINT"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xBB39": {
    "name": "Matr►list(",
    "type": "function",
    "categories": [
      "Catalog > M",
      "List > Ops"
    ],
    "syntaxes": [
      {
        "syntax": "Matr►list(matrix,listnameA,...,listname n)",
        "arguments": [
          [
            "matrix",
            "",
            false
          ],
          [
            "listnameA",
            "list",
            false
          ],
          [
            "...",
            "",
            false
          ],
          [
            "listname n",
            "list",
            false
          ]
        ],
        "description": "Fills each `listname` with elements from each column in `matrix`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "A:Matr►list("
        ]
      },
      {
        "syntax": "Matr►list(matrix,column#,listname)",
        "arguments": [
          [
            "matrix",
            "",
            false
          ],
          [
            "column#",
            "",
            false
          ],
          [
            "listname",
            "list",
            false
          ]
        ],
        "description": "Fills a `listname` with elements from a specified `column#` in `matrix`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "A:Matr►list("
        ]
      }
    ],
    "localizations": {
      "FR": "Matr►list("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x19": {
    "name": "max(",
    "type": "function",
    "categories": [
      "Catalog > M",
      "Math > Number"
    ],
    "syntaxes": [
      {
        "syntax": "max(valueA,valueB)",
        "arguments": [
          [
            "valueA",
            "",
            false
          ],
          [
            "valueB",
            "",
            false
          ]
        ],
        "description": "Returns the larger of `valueA` and `valueB`.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "7:max("
        ]
      },
      {
        "syntax": "max(list)",
        "arguments": [
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Returns the larger of `valueA` and `valueB`.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "7:max("
        ]
      },
      {
        "syntax": "max(list)",
        "arguments": [
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Returns largest real or complex element in `list`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "2:max("
        ]
      },
      {
        "syntax": "max(listA,listB)",
        "arguments": [
          [
            "listA",
            "list",
            false
          ],
          [
            "listB",
            "list",
            false
          ]
        ],
        "description": "Returns a real or complex list of the larger of each pair of elements in `listA` and `listB`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "2:max("
        ]
      },
      {
        "syntax": "max(value,list)",
        "arguments": [
          [
            "value",
            "",
            false
          ],
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Returns a real or complex list of the larger of `value` or each `list` element.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "2:max("
        ]
      }
    ],
    "localizations": {
      "FR": "max("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x21": {
    "name": "mean(",
    "type": "function",
    "categories": [
      "Catalog > M",
      "List > Math"
    ],
    "syntaxes": [
      {
        "syntax": "mean(list[,freqlist])",
        "arguments": [
          [
            "list",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            true
          ]
        ],
        "description": "Returns the mean of `list` with frequency `freqlist`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "3:mean("
        ]
      }
    ],
    "localizations": {
      "FR": "moyenne("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x1F": {
    "name": "median(",
    "type": "function",
    "categories": [
      "Catalog > M",
      "List > Math"
    ],
    "syntaxes": [
      {
        "syntax": "median(list[,freqlist])",
        "arguments": [
          [
            "list",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            true
          ]
        ],
        "description": "Returns the median of `list` with frequency `freqlist`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "4:median("
        ]
      }
    ],
    "localizations": {
      "FR": "médianne"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xF8": {
    "name": "Med-Med ",
    "type": "command",
    "categories": [
      "Catalog > M",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "Med-Med [Xlistname,Ylistname,freqlist,regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Fits a median-median model to `Xlistname` and `Ylistname` with frequency `freqlist`, and stores the regression equation to `regequ`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "3:Med-Med"
        ]
      }
    ],
    "localizations": {
      "FR": "Med-Med "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xE6": {
    "name": "Menu(",
    "type": "function",
    "categories": [
      "Catalog > M",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "Menu(\"title\",\"text1\",label1[,...,\"text7\",label7])",
        "arguments": [
          [
            "title",
            "",
            false
          ],
          [
            "text1",
            "string",
            false
          ],
          [
            "label1",
            "",
            false
          ],
          [
            "...",
            "",
            true
          ],
          [
            "text7",
            "string",
            true
          ],
          [
            "label7",
            "",
            true
          ]
        ],
        "description": "Generates a menu of up to seven items during program execution.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "C:Menu("
        ]
      }
    ],
    "localizations": {
      "FR": "Menu("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x1A": {
    "name": "min(",
    "type": "function",
    "categories": [
      "Catalog > M",
      "Math > Number"
    ],
    "syntaxes": [
      {
        "syntax": "min(valueA,valueB)",
        "arguments": [
          [
            "valueA",
            "",
            false
          ],
          [
            "valueB",
            "",
            false
          ]
        ],
        "description": "Returns smaller of `valueA` and `valueB`.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "6:min("
        ]
      },
      {
        "syntax": "min(list)",
        "arguments": [
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Returns smallest real or complex element in `list`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "1:min("
        ]
      },
      {
        "syntax": "min(listA,listB)",
        "arguments": [
          [
            "listA",
            "list",
            false
          ],
          [
            "listB",
            "list",
            false
          ]
        ],
        "description": "Returns real or complex list of the smaller of each pair of elements in `listA` and `listB`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "1:min("
        ]
      },
      {
        "syntax": "min(value,list)",
        "arguments": [
          [
            "value",
            "",
            false
          ],
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Returns a real or complex list of the smaller of `value` or each `list` element.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "1:min("
        ]
      }
    ],
    "localizations": {
      "FR": "min("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB5A": {
    "name": "ModBoxplot",
    "type": "constant",
    "categories": [
      "Catalog > M",
      "Stat Plot > Type"
    ],
    "syntaxes": [
      {
        "syntax": "Plot#(type,Xlist[,freqlist,color#])",
        "arguments": [
          [
            "type",
            "ModBoxplot token",
            false
          ],
          [
            "Xlist",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            false
          ],
          [
            "color#",
            "colorNum",
            false
          ]
        ],
        "description": "Used as the \"type\" argument in the command.\nWhere # gives Plot1, Plot2 or Plot3.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[stat plot]",
          "TYPE"
        ]
      }
    ],
    "localizations": {
      "FR": "GraphBoitMoust"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x95": {
    "name": " nCr ",
    "type": "infix operator",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "valueA nCr valueB",
        "arguments": [
          [
            "valueA",
            "",
            false
          ],
          [
            "valueB",
            "",
            false
          ]
        ],
        "description": "Returns the number of combinations of `valueA` taken `valueB` at a time.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "3:nCr"
        ]
      },
      {
        "syntax": "value nCr list",
        "arguments": [
          [
            "value",
            "",
            false
          ],
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Returns a list of the combinations of `value` taken each element in `list` at a time.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "3:nCr"
        ]
      },
      {
        "syntax": "list nCr value",
        "arguments": [
          [
            "list",
            "list",
            false
          ],
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns a list of the combinations of each element in `list` taken `value` at a time.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "3:nCr"
        ]
      },
      {
        "syntax": "listA nCr listB",
        "arguments": [
          [
            "listA",
            "list",
            false
          ],
          [
            "listB",
            "list",
            false
          ]
        ],
        "description": "Returns a list of the combinations of each element in `listA` taken each element in `listB` at a time.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "3:nCr"
        ]
      }
    ],
    "localizations": {
      "FR": "Combinaison "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF39": {
    "name": "n⁄d",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "n/d",
        "arguments": [],
        "description": "Displays results as a simple fraction.",
        "inEditorOnly": false,
        "location": [
          "[alpha]",
          "[F1]",
          "1:n/d"
        ]
      }
    ],
    "localizations": {
      "FR": "n⁄d"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0x25": {
    "name": "nDeriv(",
    "type": "function",
    "categories": [
      "Catalog > N",
      "Math > Math"
    ],
    "syntaxes": [
      {
        "syntax": "nDeriv(expression,variable,value[,H])",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ],
          [
            "variable",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ],
          [
            "H",
            "",
            true
          ]
        ],
        "description": "When command is used in Classic mode, returns approximate numerical derivative of `expression` with respect to `variable` at `value`, with specific tolerance H.\nIn MathPrint mode, numeric derivative template pastes and uses default tolerance H.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "MATH",
          "8:nDeriv("
        ]
      }
    ],
    "localizations": {
      "FR": "nDeriv("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF30": {
    "name": "►n⁄d◄►Un⁄d",
    "type": "postfix operator",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "►n/d ◄►Un/d",
        "arguments": [
          [
            "◄►",
            "",
            false
          ]
        ],
        "description": "Converts the results from a fraction to mixed number or from a mixed number to a fraction, if applicable.",
        "inEditorOnly": false,
        "location": [
          "[alpha]",
          "[F1]",
          "3:",
          "n/d",
          "Un/d"
        ]
      }
    ],
    "localizations": {
      "FR": "►n⁄d◄►Un⁄d"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xBB05": {
    "name": "►Nom(",
    "type": "function",
    "categories": [
      "Catalog > N",
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "►Nom(effective rate,compounding periods)",
        "arguments": [
          [
            "effective rate",
            "",
            false
          ],
          [
            "compounding periods",
            "",
            false
          ]
        ],
        "description": "Computes the nominal interest rate.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "B:►Nom("
        ]
      }
    ],
    "localizations": {
      "FR": "►Nom("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x66": {
    "name": "Normal",
    "type": "command",
    "categories": [
      "Catalog > N",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Normal",
        "arguments": [],
        "description": "Sets normal display mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Normal"
        ]
      }
    ],
    "localizations": {
      "FR": "Normal"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB10": {
    "name": "normalcdf(",
    "type": "function",
    "categories": [
      "Catalog > N",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "normalcdf(lowerbound,upperbound[,m,s])",
        "arguments": [
          [
            "lowerbound",
            "",
            false
          ],
          [
            "upperbound",
            "",
            false
          ],
          [
            "m",
            "",
            true
          ],
          [
            "s",
            "",
            true
          ]
        ],
        "description": "Computes the normal distribution probability between `lowerbound` and `upperbound` for the specified m and s.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "2:normalcdf("
        ]
      }
    ],
    "localizations": {
      "FR": "normalFRép("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB1B": {
    "name": "normalpdf(",
    "type": "function",
    "categories": [
      "Catalog > N",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "normalpdf(x[,m,s])",
        "arguments": [
          [
            "x",
            "",
            false
          ],
          [
            "m",
            "",
            true
          ],
          [
            "s",
            "",
            true
          ]
        ],
        "description": "Computes the probability density function for the normal distribution at a specified `x` value for the specified m and s.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "1:normalpdf("
        ]
      }
    ],
    "localizations": {
      "FR": "normalFdp("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB5B": {
    "name": "NormProbPlot",
    "type": "constant",
    "categories": [
      "Catalog > N",
      "Stat Plot > Type"
    ],
    "syntaxes": [
      {
        "syntax": "Plot#(type,Xlist[,freqlist,color#])",
        "arguments": [
          [
            "type",
            "NormProbPlot token",
            false
          ],
          [
            "Xlist",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            false
          ],
          [
            "color#",
            "colorNum",
            false
          ]
        ],
        "description": "Used as the \"type\" argument in the command\nWhere # gives Plot1, Plot2 or Plot3.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[stat plot]",
          "TYPE"
        ]
      }
    ],
    "localizations": {
      "FR": "GraphProbNorm"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xB8": {
    "name": "not(",
    "type": "function",
    "categories": [
      "Catalog > N",
      "Test"
    ],
    "syntaxes": [
      {
        "syntax": "not(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns `0` if `value` is  0. `value` can be a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[test]",
          "LOGIC",
          "4:not("
        ]
      }
    ],
    "localizations": {
      "FR": "non("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x94": {
    "name": " nPr ",
    "type": "infix operator",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "valueA nPr valueB",
        "arguments": [
          [
            "valueA",
            "",
            false
          ],
          [
            "valueB",
            "",
            false
          ]
        ],
        "description": "Returns the number of permutations of `valueA` taken `valueB` at a time.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "2:nPr"
        ]
      },
      {
        "syntax": "value nPr list",
        "arguments": [
          [
            "value",
            "",
            false
          ],
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Returns a list of the permutations of `value` taken each element in `list` at a time.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "2:nPr"
        ]
      },
      {
        "syntax": "list nPr value",
        "arguments": [
          [
            "list",
            "list",
            false
          ],
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns a list of the permutations of each element in `list` taken `value` at a time.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "2:nPr"
        ]
      },
      {
        "syntax": "listA nPr listB",
        "arguments": [
          [
            "listA",
            "list",
            false
          ],
          [
            "listB",
            "list",
            false
          ]
        ],
        "description": "Returns a list of the permutations of each element in `listA` taken each element in `listB` at a time.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "2:nPr"
        ]
      }
    ],
    "localizations": {
      "FR": " Arrangement"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB00": {
    "name": "npv(",
    "type": "function",
    "categories": [
      "Catalog > N",
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "npv(interest rate,CF0,CFList[,CFFreq])",
        "arguments": [
          [
            "interest rate",
            "",
            false
          ],
          [
            "CF0",
            "",
            false
          ],
          [
            "CFList",
            "",
            false
          ],
          [
            "CFFreq",
            "",
            true
          ]
        ],
        "description": "Computes the sum of the present values for cash inflows and outflows.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "7:npv("
        ]
      }
    ],
    "localizations": {
      "FR": "vactNet("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF11": {
    "name": "OpenLib(",
    "type": "function",
    "categories": [
      "Libraries"
    ],
    "syntaxes": [
      {
        "syntax": "OpenLib(",
        "arguments": [],
        "description": "Extends TI-Basic. (Not available.)",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "J:OpenLib("
        ]
      }
    ],
    "localizations": {
      "FR": "OuvrirBiblio("
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0x3C": {
    "name": " or ",
    "type": "infix operator",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "valueA or valueB",
        "arguments": [
          [
            "valueA",
            "",
            false
          ],
          [
            "valueB",
            "",
            false
          ]
        ],
        "description": "Returns 1 if `valueA` or `valueB` is  0. `valueA` and `valueB` can be real numbers, expressions, or lists.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[test]",
          "LOGIC",
          "2:or"
        ]
      }
    ],
    "localizations": {
      "FR": " ou "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xE0": {
    "name": "Output(",
    "type": "function",
    "categories": [
      "Catalog > O",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "Output(row,column,\"text\")",
        "arguments": [
          [
            "row",
            "",
            false
          ],
          [
            "column",
            "",
            false
          ],
          [
            "text",
            "string",
            false
          ]
        ],
        "description": "Displays `text` beginning at specified `row` and `column `of the home screen.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "6:Output("
        ]
      },
      {
        "syntax": "Output(row,column,value)",
        "arguments": [
          [
            "row",
            "",
            false
          ],
          [
            "column",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Displays `value` beginning at specified `row` and `column `of the home screen.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "6:Output("
        ]
      }
    ],
    "localizations": {
      "FR": "Output("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x77": {
    "name": "Param",
    "type": "command",
    "categories": [
      "Catalog > P",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Param",
        "arguments": [],
        "description": "Sets parametric graphing mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Par"
        ]
      }
    ],
    "localizations": {
      "FR": "Param"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xD8": {
    "name": "Pause ",
    "type": "command",
    "categories": [
      "Catalog > P",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "Pause",
        "arguments": [],
        "description": "Suspends program execution until you press Í.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "8:Pause"
        ]
      },
      {
        "syntax": "Pause [value]",
        "arguments": [
          [
            "value",
            "",
            true
          ]
        ],
        "description": "Displays `value`; suspends program execution until you press Í.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "8:Pause"
        ]
      },
      {
        "syntax": "Pause [value, time]",
        "arguments": [
          [
            "value",
            "",
            true
          ],
          [
            "time",
            "",
            true
          ]
        ],
        "description": "Displays value on the current home screen and execution of the program continues after the time period specified. For time only, use Pause `“”,time` where the value is a blank string. Time is in seconds.\nPause `value,time`.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "8:Pause"
        ]
      }
    ],
    "localizations": {
      "FR": "Pause "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEFA6": {
    "name": "piecewise(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "piecewise(",
        "comment": "CE OS 5.3+",
        "arguments": [],
        "description": "New piecewise function to support entry of functions as they are seen in textbook. This command can be found in » MATH `B:piecewise(`",
        "inEditorOnly": false,
        "location": [
          "[piecewise]"
        ]
      }
    ],
    "localizations": {
      "FR": "parmorceaux("
    },
    "since": {
      "TI-84+CE": "5.3.0"
    }
  },
  "0xEC": {
    "name": "Plot1(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Stat Plot > Plots"
    ],
    "syntaxes": [
      {
        "syntax": "Plot#(type,Xlist,Ylist[,mark,color#])",
        "arguments": [
          [
            "#",
            "",
            false
          ],
          [
            "type",
            "",
            false
          ],
          [
            "Xlist",
            "list",
            false
          ],
          [
            "Ylist",
            "list",
            false
          ],
          [
            "mark",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Defines `Plot``#` (`1`, `2`, or `3`) of `type` `Scatter` or `xyLine` for `Xlist` and `Ylist` using `mark `and `color. `\nColor#: 10 - 24 or color name pasted from [vars] COLOR.\nNote: `Xlist `and `Ylist `represent the Xlist and Ylist names.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[stat plot]",
          "STAT PLOTS",
          "1:Plot12:Plot23:Plot3"
        ]
      },
      {
        "syntax": "Plot#(type,Xlist[,freqlist,color#])",
        "arguments": [
          [
            "#",
            "",
            false
          ],
          [
            "type",
            "",
            false
          ],
          [
            "Xlist",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Defines `Plot``#` (`1`, `2`, or `3`) of `type` ` Histogram` or `Boxplot` for `Xlist` with frequency `freqlist `and color #.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.\nNote: `Xlist `represents the Xlist name.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[stat plot]",
          "STAT PLOTS",
          "1:Plot12:Plot23:Plot3"
        ]
      },
      {
        "syntax": "Plot#(type,Xlist[,freqlist,mark,color#])",
        "arguments": [
          [
            "#",
            "",
            false
          ],
          [
            "type",
            "",
            false
          ],
          [
            "Xlist",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "mark",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Defines `Plot``#` (`1`, `2`, or `3`) of `type` ` ModBoxplot` for `Xlist` with frequency `freqlist` using `mark `and `color #`.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.\nNote: `Xlist `represents the Xlist name.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[stat plot]",
          "STAT PLOTS",
          "1:Plot12:Plot23:Plot3"
        ]
      },
      {
        "syntax": "Plot#(type,datalist[,data axis,mark,color#])",
        "arguments": [
          [
            "#",
            "",
            false
          ],
          [
            "type",
            "",
            false
          ],
          [
            "datalist",
            "list",
            false
          ],
          [
            "data axis",
            "",
            true
          ],
          [
            "mark",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Defines `Plot``#` (`1`, `2`, or `3`) of `type` ` NormProbPlot` for `datalist` on `data axis` using `mark `and `color #` `data axis` can be `X` or `Y`.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.\nNote: `datalist `represents the datalist name.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[stat plot]",
          "STAT PLOTS",
          "1:Plot12:Plot23:Plot3"
        ]
      }
    ],
    "localizations": {
      "FR": "Graph1("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEA": {
    "name": "PlotsOff ",
    "type": "command",
    "categories": [
      "Catalog > P",
      "Stat Plot > Plots"
    ],
    "syntaxes": [
      {
        "syntax": "PlotsOff [1,2,3]",
        "arguments": [],
        "description": "Deselects all stat plots or one or more specified stat plots (`1`, `2`, or `3`).",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[stat plot]",
          "STAT PLOTS",
          "4:PlotsOff"
        ]
      }
    ],
    "localizations": {
      "FR": "GraphNAff "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xE9": {
    "name": "PlotsOn ",
    "type": "command",
    "categories": [
      "Catalog > P",
      "Stat Plot > Plots"
    ],
    "syntaxes": [
      {
        "syntax": "PlotsOn [1,2,3]",
        "arguments": [],
        "description": "Selects all stat plots or one or more specified stat plots (`1`, `2`, or `3`).",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[stat plot]",
          "STAT PLOTS",
          "5:PlotsOn"
        ]
      }
    ],
    "localizations": {
      "FR": "GraphAff "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB4C": {
    "name": "Pmt_Bgn",
    "type": "command",
    "categories": [
      "Catalog > P",
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "Pmt_Bgn",
        "arguments": [],
        "description": "Specifies an annuity due, where payments occur at the beginning of each payment period.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "F:Pmt_Bgn"
        ]
      }
    ],
    "localizations": {
      "FR": "Pmt_Déb"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB4B": {
    "name": "Pmt_End",
    "type": "command",
    "categories": [
      "Catalog > P",
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "Pmt_End",
        "arguments": [],
        "description": "Specifies an ordinary annuity, where payments occur at the end of each payment period.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "E:Pmt_End"
        ]
      }
    ],
    "localizations": {
      "FR": "Pmt_Fin"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB18": {
    "name": "poissoncdf(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "poissoncdf(m,x)",
        "arguments": [
          [
            "m",
            "",
            false
          ],
          [
            "x",
            "",
            false
          ]
        ],
        "description": "Computes a cumulative probability at `x` for the discrete Poisson distribution with specified mean m.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "D:poissoncdf("
        ]
      }
    ],
    "localizations": {
      "FR": "poissonFRép("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB17": {
    "name": "poissonpdf(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "poissonpdf(m,x)",
        "arguments": [
          [
            "m",
            "",
            false
          ],
          [
            "x",
            "",
            false
          ]
        ],
        "description": "Computes a probability at `x` for the discrete Poisson distribution with the specified mean m.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "C:poissonpdf("
        ]
      }
    ],
    "localizations": {
      "FR": "poissonFdp("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x78": {
    "name": "Polar",
    "type": "command",
    "categories": [
      "Catalog > P",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Polar",
        "arguments": [],
        "description": "Sets polar graphing mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Polar"
        ]
      }
    ],
    "localizations": {
      "FR": "Polaire"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB30": {
    "name": "►Polar",
    "type": "conversion",
    "categories": [
      "Catalog > P",
      "Math > Complex"
    ],
    "syntaxes": [
      {
        "syntax": "complex value ►Polar",
        "arguments": [
          [
            "complex value",
            "",
            false
          ]
        ],
        "description": "Displays `complex value` in polar format.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "CMPLX",
          "7:Polar"
        ]
      }
    ],
    "localizations": {
      "FR": "►Polaire"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x7E02": {
    "name": "PolarGC",
    "type": "command",
    "categories": [
      "Catalog > P",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "PolarGC",
        "arguments": [],
        "description": "Sets polar graphing coordinates format.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "PolarGC"
        ]
      }
    ],
    "localizations": {
      "FR": "CoordPol"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x5F": {
    "name": "prgm",
    "type": "program",
    "categories": [
      "Catalog > P",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "prgmname",
        "arguments": [
          [
            "name",
            "",
            false
          ]
        ],
        "description": "Executes the program `name`.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTRL",
          "D:prgm"
        ]
      }
    ],
    "localizations": {
      "FR": "prgm"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB03": {
    "name": "ΣPrn(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "ΣPrn(pmt1,pmt2[,roundvalue])",
        "arguments": [
          [
            "Σ",
            "",
            false
          ],
          [
            "pmt1",
            "",
            false
          ],
          [
            "pmt2",
            "",
            true
          ],
          [
            "roundvalue",
            "",
            true
          ]
        ],
        "description": "Computes the sum, rounded to `roundvalue`, of the principal amount between `pmt1` and `pmt2` for an amortization schedule.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "0:Prn("
        ]
      }
    ],
    "localizations": {
      "FR": "paSomPrinc("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xB7": {
    "name": "prod(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "List > Math"
    ],
    "syntaxes": [
      {
        "syntax": "prod(list[,start,end])",
        "arguments": [
          [
            "list",
            "list",
            false
          ],
          [
            "start",
            "",
            true
          ],
          [
            "end",
            "",
            true
          ]
        ],
        "description": "Returns product of `list` elements between `start` and `end`",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "6:prod("
        ]
      }
    ],
    "localizations": {
      "FR": "prod("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xDD": {
    "name": "Prompt ",
    "type": "command",
    "categories": [
      "Catalog > P",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "Prompt variableA[,variableB,...,variable n]",
        "arguments": [
          [
            "variableA",
            "",
            false
          ],
          [
            "variableB",
            "",
            true
          ],
          [
            "...",
            "",
            true
          ],
          [
            "variable n",
            "",
            true
          ]
        ],
        "description": "Prompts for value for `variableA`, then `variableB`, and so on.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "2:Prompt"
        ]
      }
    ],
    "localizations": {
      "FR": "Prompt "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB43": {
    "name": "1-PropZInt(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "1-PropZInt(x,n[,confidence level])",
        "arguments": [
          [
            "x",
            "",
            false
          ],
          [
            "n",
            "",
            false
          ],
          [
            "confidence level",
            "",
            true
          ]
        ],
        "description": "Computes a one-proportion `z` confidence interval.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "A:1-PropZInt("
        ]
      }
    ],
    "localizations": {
      "FR": "1-PropZInt("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB44": {
    "name": "2-PropZInt(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "2-PropZInt(x1,n1,x2,n2[,confidence level])",
        "arguments": [
          [
            "x1",
            "",
            false
          ],
          [
            "n1",
            "",
            false
          ],
          [
            "x2",
            "",
            false
          ],
          [
            "n2",
            "",
            false
          ],
          [
            "confidence level",
            "",
            true
          ]
        ],
        "description": "Computes a two-proportion `z` confidence interval.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "B:2-PropZInt("
        ]
      }
    ],
    "localizations": {
      "FR": "2-PropZInt("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB3E": {
    "name": "1-PropZTest(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "1-PropZTest(p0,x,n[,alternative,drawflag, color#])",
        "arguments": [
          [
            "p0",
            "",
            false
          ],
          [
            "x",
            "",
            false
          ],
          [
            "n",
            "",
            false
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Computes a one-proportion `z` test. `alternative`=-`1` is <; `alternative`=`0` is ; `alternative`=`1` is >. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "5:1-PropZTest("
        ]
      }
    ],
    "localizations": {
      "FR": "1-PropZTest("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB3F": {
    "name": "2-PropZTest(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "2-PropZTest(x1,n1,x2,n2[,alternative,drawflag, color#])",
        "arguments": [
          [
            "x1",
            "",
            false
          ],
          [
            "n1",
            "",
            false
          ],
          [
            "x2",
            "",
            false
          ],
          [
            "n2",
            "",
            false
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Computes a two-proportion `z` test. `alternative`=-`1` is <; `alternative`=`0` is ; `alternative`=`1` is >. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "6:2-PropZTest("
        ]
      }
    ],
    "localizations": {
      "FR": "2-PropZTest("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xA0": {
    "name": "Pt-Change(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Pt-Change(x,y[,color#])",
        "comment": "",
        "arguments": [
          [
            "x",
            "",
            false
          ],
          [
            "y",
            "",
            false
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Toggles a point on or off at (`x`,`y`) on the graph area. Off will be in the Background color and On will be the specified\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "POINTS",
          "3:Pt-Change("
        ]
      }
    ],
    "localizations": {
      "FR": "Pt-Change("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x9F": {
    "name": "Pt-Off(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Pt-Off(x,y[,mark])",
        "arguments": [
          [
            "x",
            "",
            false
          ],
          [
            "y",
            "",
            false
          ],
          [
            "mark",
            "",
            true
          ]
        ],
        "description": "Erases a point at (`x`,`y`) on the graph area using `mark`. The Off state may be the background color determined by the `ImageVar` or `color` setting.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "POINTS",
          "2:Pt-Off("
        ]
      }
    ],
    "localizations": {
      "FR": "Pt-Naff("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x9E": {
    "name": "Pt-On(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Pt-On(x,y[,mark,color#])",
        "arguments": [
          [
            "x",
            "",
            false
          ],
          [
            "y",
            "",
            false
          ],
          [
            "mark",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Draws a point at (`x`,`y`) on the graph area using `mark `and the specified `color#`.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "POINTS",
          "1:Pt-On("
        ]
      }
    ],
    "localizations": {
      "FR": "Pt-Aff("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xF7": {
    "name": "PwrReg ",
    "type": "command",
    "categories": [
      "Catalog > P",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "PwrReg [Xlistname,Ylistname,freqlist,regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Fits a power regression model to `Xlistname` and `Ylistname` with frequency `freqlist`, and stores the regression equation to `regequ`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "A:PwrReg"
        ]
      }
    ],
    "localizations": {
      "FR": "RegPuiss "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xA3": {
    "name": "Pxl-Change(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Pxl-Change(row,column[,color#])",
        "arguments": [
          [
            "row",
            "",
            false
          ],
          [
            "column",
            "",
            false
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Toggles Off to On in the graph area: with specified color# Toggles On to Off in the graph area: Off will display the set Background Image Var or Color.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "POINTS",
          "6:Pxl-Change("
        ]
      }
    ],
    "localizations": {
      "FR": "Pxl-Change("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xA2": {
    "name": "Pxl-Off(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Pxl-Off(row,column)",
        "arguments": [
          [
            "row",
            "",
            false
          ],
          [
            "column",
            "",
            false
          ]
        ],
        "description": "The Off state will display the set Background Image Var or COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "POINTS",
          "5:Pxl-Off("
        ]
      }
    ],
    "localizations": {
      "FR": "Pxl-Naff("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xA1": {
    "name": "Pxl-On(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Pxl-On(row,column[,color#])",
        "arguments": [
          [
            "row",
            "",
            false
          ],
          [
            "column",
            "",
            false
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Draws pixel on the graph area at (`row`,`column`) in the specified color.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "POINTS",
          "4:Pxl-On("
        ]
      }
    ],
    "localizations": {
      "FR": "Pxl-Aff("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x13": {
    "name": "pxl-Test(",
    "type": "function",
    "categories": [
      "Catalog > P",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "pxl-Test(row,column)",
        "arguments": [
          [
            "row",
            "",
            false
          ],
          [
            "column",
            "",
            false
          ]
        ],
        "description": "Returns 1 if pixel (`row`, `column`) is on, 0 if it is off;",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "POINTS",
          "7:pxl-Test("
        ]
      }
    ],
    "localizations": {
      "FR": "pxl-Test("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x1D": {
    "name": "P►Rx(",
    "type": "function",
    "categories": [
      "Angle",
      "Catalog > P"
    ],
    "syntaxes": [
      {
        "syntax": "P►Rx(r,θ)",
        "arguments": [
          [
            "r",
            "",
            false
          ],
          [
            "θ",
            "",
            false
          ]
        ],
        "description": "Returns `X`, given polar coordinates `r` and θ or a list of polar coordinates.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[angle]",
          "ANGLE",
          "7:P",
          "Rx("
        ]
      }
    ],
    "localizations": {
      "FR": "P►Rx("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x1E": {
    "name": "P►Ry(",
    "type": "function",
    "categories": [
      "Angle",
      "Catalog > P"
    ],
    "syntaxes": [
      {
        "syntax": "P►Ry(r,θ)",
        "arguments": [
          [
            "r",
            "",
            false
          ],
          [
            "θ",
            "",
            false
          ]
        ],
        "description": "Returns `Y`, given polar coordinates `r` and θ or a list of polar coordinates.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[angle]",
          "ANGLE",
          "8:P",
          "Ry("
        ]
      }
    ],
    "localizations": {
      "FR": "P►Ry("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xF9": {
    "name": "QuadReg ",
    "type": "command",
    "categories": [
      "Catalog > Q",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "QuadReg [Xlistname,Ylistname,freqlist,regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Fits a quadratic regression model to` Xlistname` and `Ylistname` with frequency `freqlist`, and stores the regression equation to `regequ`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "5:QuadReg"
        ]
      }
    ],
    "localizations": {
      "FR": "RegQuad "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x2F": {
    "name": "QuartReg ",
    "type": "command",
    "categories": [
      "Catalog > Q",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "QuartReg [Xlistname,Ylistname,freqlist,regequ]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Fits a quartic regression model to` Xlistname` and `Ylistname` with frequency `freqlist`, and stores the regression equation to `regequ`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "7:QuartReg"
        ]
      }
    ],
    "localizations": {
      "FR": "RegQuatre "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x64": {
    "name": "Radian",
    "type": "command",
    "categories": [
      "Catalog > R",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Radian",
        "arguments": [],
        "description": "Sets radian angle mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Radian"
        ]
      }
    ],
    "localizations": {
      "FR": "Radian"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xAB": {
    "name": "rand",
    "type": "constant",
    "categories": [
      "Catalog > R",
      "Math > Probability"
    ],
    "syntaxes": [
      {
        "syntax": "rand[(numtrials)]",
        "arguments": [
          [
            "numtrials",
            "",
            true
          ]
        ],
        "description": "Returns a random number between 0 and 1 for a specified number of trials `numtrials`.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "1:rand"
        ]
      }
    ],
    "localizations": {
      "FR": "NbrAléat"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB0B": {
    "name": "randBin(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Math > Probability"
    ],
    "syntaxes": [
      {
        "syntax": "randBin(numtrials,prob[,numsimulations])",
        "arguments": [
          [
            "numtrials",
            "",
            false
          ],
          [
            "prob",
            "",
            false
          ],
          [
            "numsimulations",
            "",
            true
          ]
        ],
        "description": "Generates and displays a random real number from a specified Binomial distribution.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "7:randBin("
        ]
      }
    ],
    "localizations": {
      "FR": "BinAléat("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB0A": {
    "name": "randInt(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Math > Probability"
    ],
    "syntaxes": [
      {
        "syntax": "randInt( lower,upper [,numtrials])",
        "arguments": [
          [
            "lower",
            "",
            false
          ],
          [
            "upper",
            "",
            false
          ],
          [
            "numtrials",
            "",
            true
          ]
        ],
        "description": "Generates and displays a random integer within a range specified by `lower` and `upper` integer bounds for a specified number of trials `numtrials`.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "5:randInt("
        ]
      }
    ],
    "localizations": {
      "FR": "entAléat("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF35": {
    "name": "randIntNoRep(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "randIntNoRep(lowerint,upperint [,numelements])",
        "arguments": [
          [
            "lowerint",
            "",
            false
          ],
          [
            "upperint",
            "",
            false
          ],
          [
            "numelements",
            "",
            true
          ]
        ],
        "description": "Returns a random ordered list of integers from a lower integer to an upper integer which may include the lower integer and upper integer. If the optional argument `numelements` is specified, the first `numelements` are listed. The first `numelements` term in the list of random integers are displayed.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "8:randIntNoRep("
        ]
      }
    ],
    "localizations": {
      "FR": "randIntNoRep("
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0x20": {
    "name": "randM(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Matrix > Math"
    ],
    "syntaxes": [
      {
        "syntax": "randM(rows,columns)",
        "arguments": [
          [
            "rows",
            "",
            false
          ],
          [
            "columns",
            "",
            false
          ]
        ],
        "description": "Returns a random matrix of `rows` × `columns`.\nMax rows x columns = 400 matrix elements.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "6:randM("
        ]
      }
    ],
    "localizations": {
      "FR": "MatAléat("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB1F": {
    "name": "randNorm(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Math > Probability"
    ],
    "syntaxes": [
      {
        "syntax": "randNorm(m,s[,numtrials])",
        "arguments": [
          [
            "m",
            "",
            false
          ],
          [
            "s",
            "",
            true
          ],
          [
            "numtrials",
            "",
            true
          ]
        ],
        "description": "Generates and displays a random real number from a specified Normal distribution specified by m and s for a specified number of trials `numtrials`.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "PRB",
          "6:randNorm("
        ]
      }
    ],
    "localizations": {
      "FR": "normAléat("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB4E": {
    "name": "re^θ𝑖",
    "type": "command",
    "categories": [
      "Catalog > R",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "re^θi",
        "arguments": [
          [
            "e",
            "",
            false
          ],
          [
            "θ",
            "",
            false
          ],
          [
            "i",
            "",
            false
          ]
        ],
        "description": "Sets the mode to polar complex number mode (`r``e``^`θ`i`).",
        "inEditorOnly": true,
        "location": [
          "[re^θ𝑖]"
        ]
      }
    ],
    "localizations": {
      "FR": "re^θ𝑖"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB4D": {
    "name": "Real",
    "type": "command",
    "categories": [
      "Catalog > R",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Real",
        "arguments": [],
        "description": "Sets mode to display complex results only when you enter complex numbers.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Real"
        ]
      }
    ],
    "localizations": {
      "FR": "Réel"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB26": {
    "name": "real(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Math > Complex"
    ],
    "syntaxes": [
      {
        "syntax": "real(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the real part of a complex number or list of complex numbers.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "CPLX",
          "2:real("
        ]
      }
    ],
    "localizations": {
      "FR": "reel("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x9B": {
    "name": "RecallGDB ",
    "type": "command",
    "categories": [
      "Catalog > R",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "RecallGDB n",
        "arguments": [
          [
            "n",
            "",
            false
          ]
        ],
        "description": "Restores all settings stored in the graph database variable `GDB``n`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "STO",
          "4:RecallGDB"
        ]
      }
    ],
    "localizations": {
      "FR": "RappelBDG "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x99": {
    "name": "RecallPic ",
    "type": "command",
    "categories": [
      "Catalog > R",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "RecallPic n",
        "arguments": [
          [
            "n",
            "",
            false
          ]
        ],
        "description": "Displays the graph and adds the picture stored in `Pic``n`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "STO",
          "2:RecallPic"
        ]
      }
    ],
    "localizations": {
      "FR": "RappelImage "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB2F": {
    "name": "►Rect",
    "type": "conversion",
    "categories": [
      "Catalog > R",
      "Math > Complex"
    ],
    "syntaxes": [
      {
        "syntax": "complex value ►Rect",
        "arguments": [
          [
            "complex value",
            "",
            false
          ]
        ],
        "description": "Displays `complex value` or list in rectangular format.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "CMPLX",
          "6:Rect"
        ]
      }
    ],
    "localizations": {
      "FR": "►Rect"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x7E03": {
    "name": "RectGC",
    "type": "command",
    "categories": [
      "Catalog > R",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "RectGC",
        "arguments": [],
        "description": "Sets rectangular graphing coordinates format.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "RectGC"
        ]
      }
    ],
    "localizations": {
      "FR": "CoordRect"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB2D": {
    "name": "ref(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Matrix > Math"
    ],
    "syntaxes": [
      {
        "syntax": "ref(matrix)",
        "arguments": [
          [
            "matrix",
            "",
            false
          ]
        ],
        "description": "Returns the row-echelon form of a `matrix`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "A:ref("
        ]
      }
    ],
    "localizations": {
      "FR": "Gauss("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF32": {
    "name": "remainder(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "remainder(dividend, divisor)",
        "arguments": [
          [
            "dividend",
            "",
            false
          ],
          [
            "divisor",
            "",
            false
          ]
        ],
        "description": "Reports the remainder as a whole number from a division of two whole numbers where the divisor is not zero.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "0:remainder("
        ]
      },
      {
        "syntax": "remainder(list, divisor)",
        "arguments": [
          [
            "list",
            "list",
            false
          ],
          [
            "divisor",
            "",
            false
          ]
        ],
        "description": "Reports the remainder as a whole number from a division of two lists where the divisor is not zero.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "0:remainder("
        ]
      },
      {
        "syntax": "remainder(dividend, list)",
        "arguments": [
          [
            "dividend",
            "",
            false
          ],
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Reports the remainder as a whole number from a division of two whole numbers where the divisor is a list.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "0:remainder("
        ]
      },
      {
        "syntax": "remainder(list, list)",
        "arguments": [
          [
            "list",
            "list",
            false
          ],
          [
            "list",
            "list",
            false
          ]
        ],
        "description": "Reports the remainder as a whole number from a division of two lists.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "0:remainder("
        ]
      }
    ],
    "localizations": {
      "FR": "remainder("
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xD2": {
    "name": "Repeat ",
    "type": "repeat",
    "categories": [
      "Catalog > R",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "Repeatcondition:commands:End:commands",
        "arguments": [
          [
            "condition",
            "",
            false
          ],
          [
            "commands",
            "",
            false
          ],
          [
            "commands",
            "",
            false
          ]
        ],
        "description": "Executes `commands` until `condition` is true.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "6:Repeat"
        ]
      }
    ],
    "localizations": {
      "FR": "Repeat "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xD5": {
    "name": "Return",
    "type": "command",
    "categories": [
      "Catalog > R",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "Return",
        "arguments": [],
        "description": "Returns to the calling program.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "E:Return"
        ]
      }
    ],
    "localizations": {
      "FR": "Return"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x12": {
    "name": "round(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Math > Number"
    ],
    "syntaxes": [
      {
        "syntax": "round(value[,#decimals])",
        "arguments": [
          [
            "value",
            "",
            false
          ],
          [
            "#decimals",
            "",
            true
          ]
        ],
        "description": "Returns a number, expression, list, or matrix rounded to `#decimals` ( 9).",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUM",
          "2:round("
        ]
      }
    ],
    "localizations": {
      "FR": "arrondi("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x17": {
    "name": "*row(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Matrix > Math"
    ],
    "syntaxes": [
      {
        "syntax": "*row(value,matrix,row)",
        "arguments": [
          [
            "*",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ],
          [
            "matrix",
            "",
            false
          ],
          [
            "row",
            "",
            false
          ]
        ],
        "description": "Returns a matrix with `row` of `matrix` multiplied by `value` and stored in `row`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "E:row("
        ]
      }
    ],
    "localizations": {
      "FR": "*ligne("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x16": {
    "name": "row+(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Matrix > Math"
    ],
    "syntaxes": [
      {
        "syntax": "row+(matrix,rowA,rowB)",
        "arguments": [
          [
            "matrix",
            "",
            false
          ],
          [
            "rowA",
            "",
            false
          ],
          [
            "rowB",
            "",
            false
          ]
        ],
        "description": "Returns a matrix with `rowA` of `matrix` added to `rowB` and stored in `rowB`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "D:row+("
        ]
      }
    ],
    "localizations": {
      "FR": "ligne+("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x18": {
    "name": "*row+(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Matrix > Math"
    ],
    "syntaxes": [
      {
        "syntax": "*row+(value,matrix,rowA,rowB)",
        "arguments": [
          [
            "*",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ],
          [
            "matrix",
            "",
            false
          ],
          [
            "rowA",
            "",
            false
          ],
          [
            "rowB",
            "",
            false
          ]
        ],
        "description": "Returns a matrix with `rowA` of `matrix` multiplied by `value`, added to `rowB`, and stored in `rowB`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "F:row+("
        ]
      }
    ],
    "localizations": {
      "FR": "*ligne+("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x15": {
    "name": "rowSwap(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Matrix > Math"
    ],
    "syntaxes": [
      {
        "syntax": "rowSwap(matrix,rowA,rowB)",
        "arguments": [
          [
            "matrix",
            "",
            false
          ],
          [
            "rowA",
            "",
            false
          ],
          [
            "rowB",
            "",
            false
          ]
        ],
        "description": "Returns a matrix with `rowA` of `matrix` swapped with `rowB`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "C:rowSwap("
        ]
      }
    ],
    "localizations": {
      "FR": "permutLigne("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB2E": {
    "name": "rref(",
    "type": "function",
    "categories": [
      "Catalog > R",
      "Matrix > Math"
    ],
    "syntaxes": [
      {
        "syntax": "rref(matrix)",
        "arguments": [
          [
            "matrix",
            "",
            false
          ]
        ],
        "description": "Returns the reduced row-echelon form of a `matrix`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[matrix]",
          "MATH",
          "B:rref("
        ]
      }
    ],
    "localizations": {
      "FR": "Gauss-Jordan("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x1B": {
    "name": "R►Pr(",
    "type": "function",
    "categories": [
      "Angle",
      "Catalog > R"
    ],
    "syntaxes": [
      {
        "syntax": "R►Pr(x,y)",
        "arguments": [
          [
            "x",
            "",
            false
          ],
          [
            "y",
            "",
            false
          ]
        ],
        "description": "Returns `R`, given rectangular coordinates `x` and `y` or a list of rectangular coordinates.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[angle]",
          "ANGLE",
          "5:R",
          "Pr("
        ]
      }
    ],
    "localizations": {
      "FR": "R►Pr("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x1C": {
    "name": "R►Pθ(",
    "type": "function",
    "categories": [
      "Angle",
      "Catalog > R"
    ],
    "syntaxes": [
      {
        "syntax": "R►Pθ(x,y)",
        "arguments": [
          [
            "θ",
            "",
            false
          ],
          [
            "x",
            "",
            false
          ],
          [
            "y",
            "",
            false
          ]
        ],
        "description": "Returns θ, given rectangular coordinates `x` and `y` or a list of rectangular coordinates.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[angle]",
          "ANGLE"
        ]
      }
    ],
    "localizations": {
      "FR": "R►Pθ("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB47": {
    "name": "2-Samp𝐅Test ",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "2-Samp𝐅Test[listname1,listname2,freqlist1,freqlist2,alternative,drawflag,color#]",
        "arguments": [
          [
            "𝐅",
            "",
            true
          ],
          [
            "listname1",
            "listName",
            true
          ],
          [
            "listname2",
            "listName",
            true
          ],
          [
            "freqlist1",
            "list",
            true
          ],
          [
            "freqlist2",
            "list",
            true
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Performs a two-sample Û test. `alternative`=-`1` is `<`; `alternative`=`0` is ; `alternative`=`1` is `>`. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "E:2-Samp",
          "Test"
        ]
      },
      {
        "syntax": "2-Samp𝐅TestSx1,n1,Sx2,n2[,alternative,drawflag,color#]",
        "arguments": [
          [
            "𝐅",
            "",
            false
          ],
          [
            "Sx1",
            "",
            false
          ],
          [
            "n1",
            "",
            false
          ],
          [
            "Sx2",
            "",
            false
          ],
          [
            "n2",
            "",
            true
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Performs a two-sample Û test. `alternative`=-`1` is `<`; `alternative`=`0` is ; `alternative`=`1` is `>`. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "E:2-Samp",
          "Test"
        ]
      }
    ],
    "localizations": {
      "FR": "2-Comp𝐅Test( "
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB49": {
    "name": "2-SampTInt ",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "2-SampTInt[listname1,listname2,freqlist1,freqlist2,confidence level,pooled]",
        "comment": "Data list input",
        "arguments": [
          [
            "listname1",
            "listName",
            true
          ],
          [
            "listname2",
            "listName",
            true
          ],
          [
            "freqlist1",
            "list",
            true
          ],
          [
            "freqlist2",
            "list",
            true
          ],
          [
            "confidence level",
            "",
            true
          ],
          [
            "pooled",
            "",
            true
          ]
        ],
        "description": "Computes a two-sample `t` confidence interval. `pooled`=`1` pools variances; `pooled`=`0` does not pool variances.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "0:2-SampTInt"
        ]
      },
      {
        "syntax": "2-SampTIntv1,Sx1,n1,v2,Sx2,n2[,confidence  level,pooled]",
        "comment": "Summary stats input",
        "arguments": [
          [
            "v",
            "",
            false
          ],
          [
            "1",
            "",
            false
          ],
          [
            "Sx1",
            "",
            false
          ],
          [
            "n1",
            "",
            false
          ],
          [
            "v",
            "",
            false
          ],
          [
            "2",
            "",
            false
          ],
          [
            "Sx2",
            "",
            false
          ],
          [
            "n2",
            "",
            true
          ],
          [
            "confidence",
            "",
            true
          ],
          [
            "level",
            "",
            true
          ],
          [
            "pooled",
            "",
            true
          ]
        ],
        "description": "Computes a two-sample `t` confidence interval. `pooled`=`1` pools variances; `pooled`=`0` does not pool variances.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "0:2-SampTInt"
        ]
      }
    ],
    "localizations": {
      "FR": "2-CompTIntC( "
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB46": {
    "name": "2-SampTTest ",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "2-SampTTest [listname1,listname2,freqlist1,freqlist2,alternative,pooled,drawflag,color#])",
        "arguments": [
          [
            "listname1",
            "listName",
            true
          ],
          [
            "listname2",
            "listName",
            true
          ],
          [
            "freqlist1",
            "list",
            true
          ],
          [
            "freqlist2",
            "list",
            true
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "pooled",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Computes a two-sample `t` test. `alternative`=-`1` is `<`; `alternative`=`0` is ; `alternative`=`1` is `>`. `pooled`=`1` pools variances; `pooled`=`0` does not pool variances. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "4:2-SampTTest"
        ]
      },
      {
        "syntax": "2-SampTTestv1,Sx1,n1,v2,Sx2,n2[,alternative,pooled,drawflag,color#])",
        "arguments": [
          [
            "v",
            "",
            false
          ],
          [
            "1",
            "",
            false
          ],
          [
            "Sx1",
            "",
            false
          ],
          [
            "n1",
            "",
            false
          ],
          [
            "v2",
            "",
            false
          ],
          [
            "Sx2",
            "",
            false
          ],
          [
            "n2",
            "",
            true
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "pooled",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Computes a two-sample `t` test. `alternative`=-`1` is `<`; `alternative`=`0` is ; `alternative`=`1` is `>`. `pooled`=`1` pools variances; `pooled`=`0` does not pool variances. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "4:2-SampTTest"
        ]
      }
    ],
    "localizations": {
      "FR": "2-CompTTest( "
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB42": {
    "name": "2-SampZInt(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "2-SampZInt(s1,s2[,listname1,listname2,freqlist1,freqlist2,confidence level])",
        "comment": "Data list input",
        "arguments": [
          [
            "s",
            "",
            false
          ],
          [
            "1",
            "",
            true
          ],
          [
            "s",
            "",
            true
          ],
          [
            "2",
            "",
            true
          ],
          [
            "listname1",
            "listName",
            true
          ],
          [
            "listname2",
            "listName",
            true
          ],
          [
            "freqlist1",
            "list",
            true
          ],
          [
            "freqlist2",
            "list",
            true
          ],
          [
            "confidence level",
            "",
            true
          ]
        ],
        "description": "Computes a two-sample `z` confidence interval.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "9:2-SampZInt("
        ]
      },
      {
        "syntax": "2-SampZInt(s1,s2,v1,n1,v2,n2[,confidence level])",
        "comment": "Summary stats input",
        "arguments": [
          [
            "s",
            "",
            false
          ],
          [
            "1",
            "",
            false
          ],
          [
            "s",
            "",
            false
          ],
          [
            "2",
            "",
            false
          ],
          [
            "v",
            "",
            false
          ],
          [
            "1",
            "",
            false
          ],
          [
            "n1",
            "",
            true
          ],
          [
            "v",
            "",
            true
          ],
          [
            "2",
            "",
            true
          ],
          [
            "n2",
            "",
            true
          ],
          [
            "confidence level",
            "",
            true
          ]
        ],
        "description": "Computes a two-sample `z` confidence interval.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "9:2-SampZInt("
        ]
      }
    ],
    "localizations": {
      "FR": "2-CompZIntC("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB3D": {
    "name": "2-SampZTest(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "2-SampZTest( s1,s2[,listname1,listname2,freqlist1,freqlist2,alternative,drawflag,color#])",
        "arguments": [
          [
            "s",
            "",
            false
          ],
          [
            "1",
            "",
            true
          ],
          [
            "s",
            "",
            true
          ],
          [
            "2",
            "",
            true
          ],
          [
            "listname1",
            "listName",
            true
          ],
          [
            "listname2",
            "listName",
            true
          ],
          [
            "freqlist1",
            "list",
            true
          ],
          [
            "freqlist2",
            "list",
            true
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Computes a two-sample `z` test. `alternative`=-`1` is `<`; `alternative`=`0` is ; `alternative`=`1` is `>`. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "3:2-SampZTest("
        ]
      },
      {
        "syntax": "2-SampZTest(s1,s2,v1,n1,v2,n2[,alternative,drawflag,color#])",
        "arguments": [
          [
            "s",
            "",
            false
          ],
          [
            "1",
            "",
            false
          ],
          [
            "s",
            "",
            false
          ],
          [
            "2",
            "",
            false
          ],
          [
            "v",
            "",
            false
          ],
          [
            "1",
            "",
            false
          ],
          [
            "n1",
            "",
            true
          ],
          [
            "v",
            "",
            true
          ],
          [
            "2",
            "",
            true
          ],
          [
            "n2",
            "",
            true
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Computes a two-sample `z` test. `alternative`=-`1` is `<`; `alternative`=`0` is ; `alternative`=`1` is `>`. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "3:2-SampZTest("
        ]
      }
    ],
    "localizations": {
      "FR": "2-CompZTest("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xFE": {
    "name": "Scatter",
    "type": "constant",
    "categories": [
      "Catalog > S",
      "Stat Plot > Type"
    ],
    "syntaxes": [
      {
        "syntax": "Plot#(type,Xlist[,freqlist,color#])",
        "arguments": [
          [
            "type",
            "Scatter token",
            false
          ],
          [
            "Xlist",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            false
          ],
          [
            "color#",
            "colorNum",
            false
          ]
        ],
        "description": "Used as the \"type\" argument in the command\nWhere # gives Plot1, Plot2 or Plot3.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[stat plot]",
          "TYPE"
        ]
      }
    ],
    "localizations": {
      "FR": "Nuage"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x67": {
    "name": "Sci",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Sci",
        "arguments": [],
        "description": "Sets scientific notation display mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Sci"
        ]
      }
    ],
    "localizations": {
      "FR": "Sci"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB58": {
    "name": "Select(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "List > Ops"
    ],
    "syntaxes": [
      {
        "syntax": "Select(Xlistname,Ylistname)",
        "arguments": [
          [
            "Xlistname",
            "list",
            false
          ],
          [
            "Ylistname",
            "list",
            false
          ]
        ],
        "description": "Selects one or more specific data points from a scatter plot or xyLine plot (only), and then store's the selected data points to two new lists, `Xlistname` and `Ylistname`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "8:Select("
        ]
      }
    ],
    "localizations": {
      "FR": "Sélect("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xE7": {
    "name": "Send(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "Program > I/O"
    ],
    "syntaxes": [
      {
        "syntax": "Send(string)",
        "arguments": [
          [
            "string",
            "string",
            false
          ]
        ],
        "description": "Sends one or more TI-Innovator™ Hub commands to a connected hub.\nNotes:\nSee also eval( and Get( command related to the Send( command.\nTI-Innovator™ Hub commands are supported in the HUB submenu in the CE OS v.5.2 program editor.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "B:Send("
        ]
      },
      {
        "syntax": "Send(string)",
        "arguments": [
          [
            "string",
            "string",
            false
          ]
        ],
        "description": "Sends one or more TI-Innovator™ Hub commands to a connected hub.\nNotes:\nSee also eval( and Get( command related to the Send( command.\nTI-Innovator™ Hub commands are supported in the HUB submenu in the CE OS v.5.2 program editor.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "HUB"
        ]
      }
    ],
    "localizations": {
      "FR": "Envoi("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x23": {
    "name": "seq(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "List > Ops"
    ],
    "syntaxes": [
      {
        "syntax": "seq(expression,variable,begin,end[,increment])",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ],
          [
            "variable",
            "",
            false
          ],
          [
            "begin",
            "",
            false
          ],
          [
            "end",
            "",
            false
          ],
          [
            "increment",
            "",
            true
          ]
        ],
        "description": "Returns list created by evaluating `expression` with regard to `variable`, from `begin` to `end` by `increment.`",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "5:seq("
        ]
      }
    ],
    "localizations": {
      "FR": "suite("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF8F": {
    "name": "SEQ(𝒏)",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "Seq(n)",
        "comment": "CE OS 5.2+",
        "arguments": [
          [
            "n",
            "",
            false
          ]
        ],
        "description": "In sequence mode, SEQ(`n`) sets the sequence editor type to enter sequence functions, u, v, or w, as a function of the independent variable `n`.   Can also be set from the Y= editor in SEQ mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "SEQ(n)"
        ]
      }
    ],
    "localizations": {
      "FR": "SUITE(𝒏)"
    },
    "since": {
      "TI-84+CE": "5.0.0"
    }
  },
  "0xEF90": {
    "name": "SEQ(𝒏+1)",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "Seq(n+1)",
        "comment": "CE OS 5.2+",
        "arguments": [
          [
            "n+1",
            "",
            false
          ]
        ],
        "description": "In sequence mode, SEQ(`n+1`) sets the sequence editor type to enter sequence functions, u, v, or w, as a function of the independent variable `n+1`.   Can also be set from the Y= editor in SEQ mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "SEQ(n+1)"
        ]
      }
    ],
    "localizations": {
      "FR": "SUITE(𝒏+1)"
    },
    "since": {
      "TI-84+CE": "5.0.0"
    }
  },
  "0xEF91": {
    "name": "SEQ(𝒏+2)",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "Seq(n+2)",
        "comment": "CE OS 5.2+",
        "arguments": [
          [
            "n+2",
            "",
            false
          ]
        ],
        "description": "In sequence mode, SEQ(`n+2`) sets the sequence editor type to enter sequence functions, u, v, or w, as a function of the independent variable `n+2`.   Can also be set from the Y= editor in SEQ mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "SEQ(n+2)"
        ]
      }
    ],
    "localizations": {
      "FR": "SUITE(𝒏+2)"
    },
    "since": {
      "TI-84+CE": "5.0.0"
    }
  },
  "0x79": {
    "name": "Seq",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Seq",
        "arguments": [],
        "description": "Sets sequence graphing mode.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Seq"
        ]
      }
    ],
    "localizations": {
      "FR": "Suite"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x7E00": {
    "name": "Sequential",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Sequential",
        "arguments": [],
        "description": "Sets mode to graph functions sequentially.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Sequential"
        ]
      }
    ],
    "localizations": {
      "FR": "Séquentiel"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF00": {
    "name": "setDate(",
    "type": "function",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "setDate(year,month,day)",
        "comment": "EFXX tokens are TI-84+ and later only",
        "arguments": [
          [
            "year",
            "",
            false
          ],
          [
            "month",
            "",
            false
          ],
          [
            "day",
            "",
            false
          ]
        ],
        "description": "Sets the date using a year, month, day format. The `year` must be 4 digits; `month` and `day` can be 1 or 2 digit.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "setDate("
        ]
      }
    ],
    "localizations": {
      "FR": "défDate("
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xEF03": {
    "name": "setDtFmt(",
    "type": "function",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "setDtFmt(integer)",
        "arguments": [
          [
            "integer",
            "",
            false
          ]
        ],
        "description": "Sets the date format.\n1 = M/D/Y2 = D/M/Y3 = Y/M/D",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "setDtFmt("
        ]
      }
    ],
    "localizations": {
      "FR": "défFmtDt("
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xEF01": {
    "name": "setTime(",
    "type": "function",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "setTime(hour,minute, second)",
        "arguments": [
          [
            "hour",
            "",
            false
          ],
          [
            "minute",
            "",
            false
          ],
          [
            "second",
            "",
            false
          ]
        ],
        "description": "Sets the time using an hour, minute, second format. The `hour` must be in 24 hour format, in which 13 = 1 p.m.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "setTime("
        ]
      }
    ],
    "localizations": {
      "FR": "défHeure("
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xEF04": {
    "name": "setTmFmt(",
    "type": "function",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "setTmFmt(integer)",
        "arguments": [
          [
            "integer",
            "",
            false
          ]
        ],
        "description": "Sets the time format.\n12 = 12 hour format24 = 24 hour format",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "setTmFmt("
        ]
      }
    ],
    "localizations": {
      "FR": "défFmtHr("
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xBB4A": {
    "name": "SetUpEditor ",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "SetUpEditor",
        "arguments": [],
        "description": "Removes all list names from the stat list editor, and then restores list names `L1` through `L6` to columns `1` through `6`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "EDIT",
          "5:SetUpEditor"
        ]
      },
      {
        "syntax": "SetUpEditor listname1[,listname2,...,listname20]",
        "arguments": [
          [
            "listname1",
            "listName",
            false
          ],
          [
            "listname2",
            "listName",
            true
          ],
          [
            "...",
            "",
            true
          ],
          [
            "listname20",
            "listName",
            true
          ]
        ],
        "description": "Removes all list names from the stat list editor, then sets it up to display one or more `listnames` in the specified order, starting with column `1`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "EDIT",
          "5:SetUpEditor"
        ]
      }
    ],
    "localizations": {
      "FR": "ListesDéfaut "
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xA4": {
    "name": "Shade(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Shade(lowerfunc,upperfunc[,Xleft,Xright,pattern,patres,color#])",
        "arguments": [
          [
            "lowerfunc",
            "",
            false
          ],
          [
            "upperfunc",
            "",
            false
          ],
          [
            "Xleft",
            "",
            true
          ],
          [
            "Xright",
            "",
            true
          ],
          [
            "pattern",
            "",
            true
          ],
          [
            "patres",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Draws `lowerfunc` and `upperfunc` in terms of `X` on the current graph and uses `pattern` and `patres` to shade and color the area bounded by `lowerfunc`, `upperfunc`, `Xleft`, and `Xright`. `lowerfunc `and `upperfunc `are shaded in the same specified color.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "7:Shade("
        ]
      }
    ],
    "localizations": {
      "FR": "Ombre("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB37": {
    "name": "Shadeχ²(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "Shadeχ²(lowerbound,upperbound,df[,color#])",
        "arguments": [
          [
            "χ²",
            "",
            false
          ],
          [
            "lowerbound",
            "",
            false
          ],
          [
            "upperbound",
            "",
            false
          ],
          [
            "df",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Draws the density function for the χ² distribution specified by degrees of freedom `df`, and shades and colors the area between `lowerbound` and `upperbound`.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DRAW",
          "3:Shade",
          "("
        ]
      }
    ],
    "localizations": {
      "FR": "Ombreχ²("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB38": {
    "name": "Shade𝐅(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "Shade𝐅(lowerbound,upperbound,numerator df,denominator df[,color#])",
        "arguments": [
          [
            "𝐅",
            "",
            false
          ],
          [
            "lowerbound",
            "",
            false
          ],
          [
            "upperbound",
            "",
            false
          ],
          [
            "numerator df",
            "",
            false
          ],
          [
            "denominator df",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Draws the density function for the Û` `distribution specified by `numerator df` and `denominator df` and shades and colors the area between `lowerbound` and `upperbound`.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DRAW",
          "4:Shade",
          "("
        ]
      }
    ],
    "localizations": {
      "FR": "Ombre𝐅("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB35": {
    "name": "ShadeNorm(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "ShadeNorm(lowerbound,upperbound[,m,s,color#])",
        "arguments": [
          [
            "lowerbound",
            "",
            false
          ],
          [
            "upperbound",
            "",
            false
          ],
          [
            "m",
            "",
            true
          ],
          [
            "s",
            "",
            true
          ],
          [
            "color",
            "",
            true
          ],
          [
            "#",
            "",
            true
          ]
        ],
        "description": "Draws the normal density function specified by m and s and shades and colors the area between `lowerbound` and `upperbound`.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DRAW",
          "1:ShadeNorm("
        ]
      }
    ],
    "localizations": {
      "FR": "OmbreNorm("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB36": {
    "name": "Shade_t(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "Shade_t(lowerbound,upperbound,df[,color#])",
        "arguments": [
          [
            "lowerbound",
            "",
            false
          ],
          [
            "upperbound",
            "",
            false
          ],
          [
            "df",
            "",
            false
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Draws the density function for the Student-t distribution specified by degrees of freedom df, and shades or colors the area between `lowerbound` and `upperbound`.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DRAW",
          "2:Shade_t("
        ]
      }
    ],
    "localizations": {
      "FR": "Ombre_t("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x7E01": {
    "name": "Simul",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Mode"
    ],
    "syntaxes": [
      {
        "syntax": "Simul",
        "arguments": [],
        "description": "Sets mode to graph functions simultaneously.",
        "inEditorOnly": true,
        "location": [
          "[mode]",
          "Simul"
        ]
      }
    ],
    "localizations": {
      "FR": "Simul"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xC2": {
    "name": "sin(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "Keypad"
    ],
    "syntaxes": [
      {
        "syntax": "sin(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the sine of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[sin]"
        ]
      }
    ],
    "localizations": {
      "FR": "sin("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xC3": {
    "name": "sin⁻¹(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "Keypad"
    ],
    "syntaxes": [
      {
        "syntax": "sin⁻¹(value)",
        "arguments": [
          [
            "⁻¹",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the arcsine of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "?"
        ]
      }
    ],
    "localizations": {
      "FR": "Arcsin("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xC8": {
    "name": "sinh(",
    "type": "function",
    "categories": [
      "Catalog > S"
    ],
    "syntaxes": [
      {
        "syntax": "sinh(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the hyperbolic sine of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "sinh("
        ]
      }
    ],
    "localizations": {
      "FR": "sh("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xC9": {
    "name": "sinh⁻¹(",
    "type": "function",
    "categories": [
      "Catalog > S"
    ],
    "syntaxes": [
      {
        "syntax": "sinh⁻¹ (value)",
        "arguments": [
          [
            "⁻¹",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the hyperbolic arcsine of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "sinh"
        ]
      }
    ],
    "localizations": {
      "FR": "Argsh("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB32": {
    "name": "SinReg ",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "SinReg [iterations,Xlistname,Ylistname,period,regequ]",
        "arguments": [
          [
            "iterations",
            "",
            true
          ],
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "period",
            "",
            true
          ],
          [
            "regequ",
            "",
            true
          ]
        ],
        "description": "Attempts `iterations` times to fit a sinusoidal regression model to `Xlistname` and `Ylistname` using a `period` guess, and stores the regression equation to `regequ`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "C:SinReg"
        ]
      }
    ],
    "localizations": {
      "FR": "RegSin "
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x22": {
    "name": "solve(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "Math > Math"
    ],
    "syntaxes": [
      {
        "syntax": "solve(expression,variable,guess,{lower,upper})",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ],
          [
            "variable",
            "",
            false
          ],
          [
            "guess",
            "",
            false
          ],
          [
            "lower",
            "",
            false
          ],
          [
            "upper",
            "",
            false
          ]
        ],
        "description": "Solves `expression` for `variable`, given an initial `guess` and `lower` and `upper` bounds within which the solution is sought.",
        "inEditorOnly": true,
        "location": [
          "[math]",
          "MATH",
          "0:solve("
        ]
      }
    ],
    "localizations": {
      "FR": "résoudre("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xE3": {
    "name": "SortA(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "List > Ops"
    ],
    "syntaxes": [
      {
        "syntax": "SortA(listname)",
        "arguments": [
          [
            "listname",
            "list",
            false
          ]
        ],
        "description": "Sorts elements of `listname` in ascending order.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "1:SortA("
        ]
      },
      {
        "syntax": "SortA(keylistname,dependlist1[,dependlist2,...,dependlist n])",
        "arguments": [
          [
            "keylistname",
            "list",
            false
          ],
          [
            "dependlist1",
            "list",
            false
          ],
          [
            "dependlist2",
            "list",
            true
          ],
          [
            "dependlist n",
            "list",
            true
          ]
        ],
        "description": "Sorts elements of `keylistname` in ascending order, then sorts each `dependlist` as a dependent list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "1:SortA("
        ]
      }
    ],
    "localizations": {
      "FR": "Tricroi("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xE4": {
    "name": "SortD(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "List > Ops"
    ],
    "syntaxes": [
      {
        "syntax": "SortD(listname)",
        "arguments": [
          [
            "listname",
            "list",
            false
          ]
        ],
        "description": "Sorts elements of `listname` in descending order.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "2:SortD("
        ]
      },
      {
        "syntax": "SortD(keylistname,dependlist1[,dependlist2,..., dependlist n])",
        "arguments": [
          [
            "keylistname",
            "list",
            false
          ],
          [
            "dependlist1",
            "list",
            false
          ],
          [
            "dependlist2",
            "list",
            true
          ],
          [
            "dependlist n",
            "list",
            true
          ]
        ],
        "description": "Sorts elements of `keylistname` in descending order, then sorts each `dependlist` as a dependent list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "OPS",
          "2:SortD("
        ]
      }
    ],
    "localizations": {
      "FR": "Tridécroi("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF0B": {
    "name": "startTmr",
    "type": "constant",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "startTmr",
        "arguments": [],
        "description": "Starts the clock timer. Store or note the displayed value, and use it as the argument for `checkTmr( )` to check the elapsed time.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "startTmr"
        ]
      }
    ],
    "localizations": {
      "FR": "actMintr "
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xEF40": {
    "name": "STATWIZARD OFF",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "STATWIZARD OFF",
        "arguments": [],
        "description": "Disables wizard syntax help for statistical commands, distributions, and seq(.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "STATWIZARD OFF"
        ]
      }
    ],
    "localizations": {
      "FR": "STATWIZARD OFF"
    }
  },
  "0xEF3F": {
    "name": "STATWIZARD ON",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "STATWIZARD ON",
        "arguments": [],
        "description": "Enables wizard syntax help for statistical commands, distributions, and seq(.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "STATWIZARD ON("
        ]
      }
    ],
    "localizations": {
      "FR": "STATWIZARD ON"
    }
  },
  "0xBB0D": {
    "name": "stdDev(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "List > Math"
    ],
    "syntaxes": [
      {
        "syntax": "stdDev(list[,freqlist])",
        "arguments": [
          [
            "list",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            true
          ]
        ],
        "description": "Returns the standard deviation of the elements in `list` with frequency `freqlist`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "7:stdDev("
        ]
      }
    ],
    "localizations": {
      "FR": "Ecart-type("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xD9": {
    "name": "Stop",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "Stop",
        "arguments": [],
        "description": "Ends program execution; returns to home screen.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "F:Stop"
        ]
      }
    ],
    "localizations": {
      "FR": "Stop"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x4": {
    "name": "→",
    "type": "store",
    "categories": [
      "Catalog > Misc",
      "Keypad",
      "Punctuation > Operators"
    ],
    "syntaxes": [
      {
        "syntax": "Store: value→variable",
        "arguments": [
          [
            "Store:",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ],
          [
            "→",
            "",
            false
          ],
          [
            "variable",
            "",
            false
          ]
        ],
        "description": "Stores `value` in `variable`.",
        "inEditorOnly": false,
        "location": [
          "[→]"
        ]
      }
    ],
    "localizations": {
      "FR": "→"
    }
  },
  "0x9A": {
    "name": "StoreGDB ",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "StoreGDB n",
        "arguments": [
          [
            "n",
            "",
            false
          ]
        ],
        "description": "Stores current graph in database `GDB``n`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "STO",
          "3:StoreGDB"
        ]
      }
    ],
    "localizations": {
      "FR": "SauveBDG "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x98": {
    "name": "StorePic ",
    "type": "command",
    "categories": [
      "Catalog > S",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "StorePic n",
        "arguments": [
          [
            "n",
            "",
            false
          ]
        ],
        "description": "Stores current picture in picture `Pic``n`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "STO",
          "1:StorePic"
        ]
      }
    ],
    "localizations": {
      "FR": "SauveImage "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB56": {
    "name": "String►Equ(",
    "type": "function",
    "categories": [
      "Catalog > S"
    ],
    "syntaxes": [
      {
        "syntax": "String►Equ(string,Y= var)",
        "arguments": [
          [
            "string",
            "string",
            false
          ],
          [
            "var",
            "",
            false
          ]
        ],
        "description": "Converts `string` into an equation and stores it in `Y=`` var`.\nstring can be a string or string variable.\nString►Equ( is the inverse of Equ►String(.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "I/O",
          "D:String>Equ(",
          "F:String>Equ("
        ]
      }
    ],
    "localizations": {
      "FR": "Chaine►Equ("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB0C": {
    "name": "sub(",
    "type": "function",
    "categories": [
      "Catalog > S"
    ],
    "syntaxes": [
      {
        "syntax": "sub(string,begin,length)",
        "arguments": [
          [
            "string",
            "string",
            false
          ],
          [
            "begin",
            "",
            false
          ],
          [
            "length",
            "",
            false
          ]
        ],
        "description": "Returns a string that is a subset of another `string`, from `begin` to `length`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "sub("
        ]
      }
    ],
    "localizations": {
      "FR": "Sous-chaine("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xB6": {
    "name": "sum(",
    "type": "function",
    "categories": [
      "Catalog > S",
      "List > Math"
    ],
    "syntaxes": [
      {
        "syntax": "sum(list[,start,end])",
        "arguments": [
          [
            "list",
            "list",
            false
          ],
          [
            "start",
            "",
            true
          ],
          [
            "end",
            "",
            true
          ]
        ],
        "description": "Returns the sum of elements of `list` from `start` to `end`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "5:sum("
        ]
      }
    ],
    "localizations": {
      "FR": "somme("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF33": {
    "name": "Σ(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "Σ(expression[,start,end])",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ],
          [
            "start",
            "",
            true
          ],
          [
            "end",
            "",
            true
          ]
        ],
        "description": "Classic command as shown.\nIn MathPrint™ the summation entry template displays and returns the sum of elements of `list`  from `start`  to `end, `where` start `<=` end`.",
        "inEditorOnly": false,
        "location": [
          "[Σ]"
        ]
      }
    ],
    "localizations": {
      "FR": "Σ("
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xC6": {
    "name": "tan(",
    "type": "function",
    "categories": [
      "Catalog > T",
      "Keypad"
    ],
    "syntaxes": [
      {
        "syntax": "tan(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the tangent of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[tan]"
        ]
      }
    ],
    "localizations": {
      "FR": "tan("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xC7": {
    "name": "tan⁻¹(",
    "type": "function",
    "categories": [
      "Catalog > T",
      "Keypad"
    ],
    "syntaxes": [
      {
        "syntax": "tan⁻¹(value)",
        "arguments": [
          [
            "⁻¹",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the arctangent of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[tan⁻¹]"
        ]
      }
    ],
    "localizations": {
      "FR": "Arctan("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xA7": {
    "name": "Tangent(",
    "type": "function",
    "categories": [
      "Catalog > T",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Tangent(expression,value[,color#,linestyle#])",
        "arguments": [
          [
            "expression",
            "expression",
            false
          ],
          [
            "value",
            "",
            false
          ],
          [
            "color#",
            "colorNum",
            true
          ],
          [
            "linestyle#",
            "number",
            true
          ]
        ],
        "description": "Draws a line tangent to `expression` at `X`=`value` with specified `color` #: 10-24 and line style `linestyle #: `1-2.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "5:Tangent("
        ]
      }
    ],
    "localizations": {
      "FR": "Tangente("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xCC": {
    "name": "tanh(",
    "type": "function",
    "categories": [
      "Catalog > T"
    ],
    "syntaxes": [
      {
        "syntax": "tanh(value)",
        "arguments": [
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns hyperbolic tangent of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "tanh("
        ]
      }
    ],
    "localizations": {
      "FR": "th("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xCD": {
    "name": "tanh⁻¹(",
    "type": "function",
    "categories": [
      "Catalog > T"
    ],
    "syntaxes": [
      {
        "syntax": "tanh⁻¹(value)",
        "arguments": [
          [
            "⁻¹",
            "",
            false
          ],
          [
            "value",
            "",
            false
          ]
        ],
        "description": "Returns the hyperbolic arctangent of a real number, expression, or list.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "tanh"
        ]
      }
    ],
    "localizations": {
      "FR": "Argth("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB12": {
    "name": "tcdf(",
    "type": "function",
    "categories": [
      "Catalog > T",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "tcdf(lowerbound,upperbound,df)",
        "arguments": [
          [
            "lowerbound",
            "",
            false
          ],
          [
            "upperbound",
            "",
            false
          ],
          [
            "df",
            "",
            false
          ]
        ],
        "description": "Computes the Student-`t` distribution probability between `lowerbound` and` upperbound` for the specified degrees of freedom` df`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "6:tcdf("
        ]
      }
    ],
    "localizations": {
      "FR": "studentFRép("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x93": {
    "name": "Text(",
    "type": "function",
    "categories": [
      "Catalog > T",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Text(row,column,text1,text2,...,text n)",
        "arguments": [
          [
            "row",
            "",
            false
          ],
          [
            "column",
            "",
            false
          ],
          [
            "text1",
            "string",
            false
          ],
          [
            "text2",
            "string",
            false
          ],
          [
            "...",
            "",
            false
          ],
          [
            "text n",
            "string",
            false
          ]
        ],
        "description": "Writes `text` on graph beginning at pixel (`row`,`column`), where 0  `row`  164 and 0  `column`  264.\nFull mode, row must be <=148; column must be 256\nHoriz mode, row must be row<=66 and column must be <=256\nG-T mode, row must be row <=126; column must be 176",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "0:Text("
        ]
      }
    ],
    "localizations": {
      "FR": "Texte("
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF67": {
    "name": "TextColor(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "TextColor([color#]",
        "arguments": [
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Set text color prior to using the `Text( `command.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "A:TextColor("
        ]
      }
    ],
    "localizations": {
      "FR": "CouleurTexte("
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0xCF": {
    "name": "Then",
    "type": "basic instruction only",
    "categories": [
      "Catalog > T",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": "ThenSee If:Then",
        "arguments": [
          [
            "See",
            "",
            false
          ]
        ],
        "description": "",
        "inEditorOnly": false,
        "location": [
          "[Then]"
        ]
      }
    ],
    "localizations": {
      "FR": "Then"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x7E06": {
    "name": "Thick",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "Thick",
        "comment": "Alias ?",
        "arguments": [],
        "description": "Resets all Y=editor line-style settings to Thick.",
        "inEditorOnly": true,
        "location": [
          "zT",
          "Thick"
        ]
      }
    ],
    "localizations": {
      "FR": "Thick"
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0xEF74": {
    "name": "Thin",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "Thin",
        "arguments": [],
        "description": "Resets all Y=editor line-style settings to Thin.",
        "inEditorOnly": true,
        "location": [
          "zT",
          "Thin"
        ]
      }
    ],
    "localizations": {
      "FR": "Fin"
    },
    "since": {
      "TI-84+CSE": "4.0"
    }
  },
  "0x7E0F": {
    "name": "Time",
    "type": "command",
    "categories": [
      "Catalog > T",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "Time",
        "arguments": [],
        "description": "Sets sequence graphs to plot with respect to time.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "Time"
        ]
      }
    ],
    "localizations": {
      "FR": "f(n)"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF05": {
    "name": "timeCnv(",
    "type": "function",
    "categories": [
      "Time"
    ],
    "syntaxes": [
      {
        "syntax": "timeCnv(seconds)",
        "arguments": [
          [
            "seconds",
            "",
            false
          ]
        ],
        "description": "Converts seconds to units of time that can be more easily understood for evaluation. The list is in {days,hours,minutes,seconds} format.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[catalog]",
          "timeCnv"
        ]
      }
    ],
    "localizations": {
      "FR": "convHeur("
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0xBB48": {
    "name": "TInterval ",
    "type": "command",
    "categories": [
      "Catalog > T",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "TInterval [listname,freqlist,confidence level]",
        "comment": "Data list input",
        "arguments": [
          [
            "listname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "confidence level",
            "",
            true
          ]
        ],
        "description": "Computes a `t` confidence interval.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "8:TInterval"
        ]
      },
      {
        "syntax": "TInterval v,Sx,n[,confidence level]",
        "comment": "Summary stats input",
        "arguments": [
          [
            "v",
            "",
            false
          ],
          [
            "Sx",
            "",
            false
          ],
          [
            "n",
            "",
            true
          ],
          [
            "confidence level",
            "",
            true
          ]
        ],
        "description": "Computes a `t` confidence interval.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "8:TInterval"
        ]
      }
    ],
    "localizations": {
      "FR": "TintConf "
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xEF97": {
    "name": "toString(",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "toString((value[,format])",
        "comment": "CE OS 5.2+",
        "arguments": [
          [
            "value",
            "",
            true
          ],
          [
            "format",
            "",
            true
          ]
        ],
        "description": "Converts value to a string where `value` can be real, complex, an evaluated expression, list, or matrix.  String `value` displays in classic `format` (0) following the mode setting AUTO/DEC or in decimal `format` (1).",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "E:toString(",
          "C:toString("
        ]
      }
    ],
    "localizations": {
      "FR": "versChaîne("
    },
    "since": {
      "TI-84+CE": "5.2.0"
    }
  },
  "0xBB1C": {
    "name": "tpdf(",
    "type": "function",
    "categories": [
      "Catalog > T",
      "Statistics > Distributions"
    ],
    "syntaxes": [
      {
        "syntax": "tpdf(x,df)",
        "arguments": [
          [
            "x",
            "",
            false
          ],
          [
            "df",
            "",
            false
          ]
        ],
        "description": "Computes the probability density function (pdf) for the Student-`t` distribution at a specified `x` value with specified degrees of freedom `df`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[distr]",
          "DISTR",
          "5:tpdf("
        ]
      }
    ],
    "localizations": {
      "FR": "StudentFdp("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x84": {
    "name": "Trace",
    "type": "command",
    "categories": [
      "Catalog > T"
    ],
    "syntaxes": [
      {
        "syntax": "Trace",
        "arguments": [],
        "description": "Displays the graph and enters TRACE mode.",
        "inEditorOnly": false,
        "location": [
          "[Trace]"
        ]
      }
    ],
    "localizations": {
      "FR": "Trace"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB3C": {
    "name": "T-Test ",
    "type": "command",
    "categories": [
      "Catalog > T",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "T-Test m0[,listname,freqlist,alternative,drawflag,color#]) ",
        "comment": "Data list input",
        "arguments": [
          [
            "m",
            "",
            false
          ],
          [
            "0",
            "",
            true
          ],
          [
            "listname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Performs a `t` test with frequency `freqlist`. `alternative`=-`1` is `<`; `alternative`=`0` is ; `alternative`=`1` is `>`. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "2:T-Test"
        ]
      },
      {
        "syntax": "T-Test m0,v,Sx,n[,alternative,drawflag,color#])",
        "arguments": [
          [
            "m",
            "",
            false
          ],
          [
            "0",
            "",
            false
          ],
          [
            "v",
            "",
            false
          ],
          [
            "Sx",
            "",
            false
          ],
          [
            "n",
            "",
            true
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Performs a `t` test with frequency `freqlist`. `alternative`=-`1` is < ; `alternative`=`0` is Ä; `alternative`=`1` is >. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "2:T-Test"
        ]
      }
    ],
    "localizations": {
      "FR": "T-Test "
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB24": {
    "name": "tvm_FV",
    "type": "userfunction",
    "categories": [
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "tvm_FV[(𝗡,I%,PV,PMT,P/Y,C/Y)]",
        "comment": "pre-CE french was vat_vacq",
        "arguments": [
          [
            "𝗡",
            "",
            true
          ],
          [
            "I%",
            "",
            true
          ],
          [
            "PV",
            "",
            true
          ],
          [
            "PMT",
            "",
            true
          ],
          [
            "P/Y",
            "",
            true
          ],
          [
            "C/Y",
            "",
            true
          ]
        ],
        "description": "Computes the future value.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "6:tvm_FV"
        ]
      }
    ],
    "localizations": {
      "FR": "tvm_VAC"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB21": {
    "name": "tvm_I%",
    "type": "userfunction",
    "categories": [
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "tvm_I%[(𝗡,PV,PMT,FV,P/Y,C/Y)]",
        "comment": "pre-CE french was vat_I",
        "arguments": [
          [
            "I%",
            "",
            true
          ],
          [
            "𝗡",
            "",
            true
          ],
          [
            "PV",
            "",
            true
          ],
          [
            "PMT",
            "",
            true
          ],
          [
            "FV",
            "",
            true
          ],
          [
            "P/Y",
            "",
            true
          ],
          [
            "C/Y",
            "",
            true
          ]
        ],
        "description": "Computes the annual interest rate.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "3:tvm_"
        ]
      }
    ],
    "localizations": {
      "FR": "tvm_I%"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB23": {
    "name": "tvm_𝗡",
    "type": "userfunction",
    "categories": [
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "tvm_𝗡[(I%,PV,PMT,FV,P/Y,C/Y)]",
        "comment": "pre-CE french was vat_𝗡",
        "arguments": [
          [
            "𝗡",
            "",
            true
          ],
          [
            "I%",
            "",
            true
          ],
          [
            "PV",
            "",
            true
          ],
          [
            "PMT",
            "",
            true
          ],
          [
            "FV",
            "",
            true
          ],
          [
            "P/Y",
            "",
            true
          ],
          [
            "C/Y",
            "",
            true
          ]
        ],
        "description": "Computes the number of payment periods.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "5:tvm_"
        ]
      }
    ],
    "localizations": {
      "FR": "tvm_𝗡"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB20": {
    "name": "tvm_Pmt",
    "type": "userfunction",
    "categories": [
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "tvm_Pmt[(𝗡,I%,PV,FV,P/Y,C/Y)]",
        "comment": "pre-CE french was vatPmt",
        "arguments": [
          [
            "𝗡",
            "",
            true
          ],
          [
            "I%",
            "",
            true
          ],
          [
            "PV",
            "",
            true
          ],
          [
            "FV",
            "",
            true
          ],
          [
            "P/Y",
            "",
            true
          ],
          [
            "C/Y",
            "",
            true
          ]
        ],
        "description": "Computes the amount of each payment.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "2:tvm_Pmt"
        ]
      }
    ],
    "localizations": {
      "FR": "tvm_Pmt"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB22": {
    "name": "tvm_PV",
    "type": "userfunction",
    "categories": [
      "Finance > Calc"
    ],
    "syntaxes": [
      {
        "syntax": "tvm_PV[(𝗡,I%,PMT,FV,P/Y,C/Y)]",
        "comment": "pre-CE french was vat_Vact",
        "arguments": [
          [
            "𝗡",
            "",
            true
          ],
          [
            "I%",
            "",
            true
          ],
          [
            "PMT",
            "",
            true
          ],
          [
            "FV",
            "",
            true
          ],
          [
            "P/Y",
            "",
            true
          ],
          [
            "C/Y",
            "",
            true
          ]
        ],
        "description": "Computes the present value.",
        "inEditorOnly": false,
        "location": [
          "[apps]",
          "1:Finance",
          "CALC",
          "4:tvm_PV"
        ]
      }
    ],
    "localizations": {
      "FR": "tvm_VA"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0xBB69": {
    "name": "UnArchive ",
    "type": "command",
    "categories": [
      "Catalog > U",
      "Memory"
    ],
    "syntaxes": [
      {
        "syntax": "UnArchive variable",
        "arguments": [
          [
            "variable",
            "",
            false
          ]
        ],
        "description": "Moves the specified variables from the user data archive memory to RAM.\nTo archive variables, use `Archive`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[mem]",
          "6:UnArchive"
        ]
      }
    ],
    "localizations": {
      "FR": "DésArchive "
    },
    "since": {
      "TI-83+": "0.103"
    }
  },
  "0xEF3A": {
    "name": "Un⁄d",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "Un/d",
        "arguments": [],
        "description": "Displays results as a mixed number, if applicable.",
        "inEditorOnly": false,
        "location": [
          "[math]",
          "NUMC: Un/d"
        ]
      }
    ],
    "localizations": {
      "FR": "Un⁄d"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0x7E10": {
    "name": "uvAxes",
    "type": "command",
    "categories": [
      "Catalog > U",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "uvAxes",
        "arguments": [],
        "description": "Sets sequence graphs to plot `u(``n``)` on the x-axis and `v(``n``)` on the y-axis.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "uv"
        ]
      }
    ],
    "localizations": {
      "FR": "uvAxes"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x7E12": {
    "name": "uwAxes",
    "type": "command",
    "categories": [
      "Catalog > U",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "uwAxes",
        "arguments": [],
        "description": "Sets sequence graphs to plot `u(``n``)` on the x-axis and `w(``n``)` on the y-axis.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "uw"
        ]
      }
    ],
    "localizations": {
      "FR": "uwAxes"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xF2": {
    "name": "1-Var Stats ",
    "type": "command",
    "categories": [
      "Catalog > V",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "1-VarStats [Xlistname,freqlist]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ]
        ],
        "description": "Performs one-variable analysis on the data in `Xlistname` with frequency `freqlist`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "1:1-Var Stats"
        ]
      }
    ],
    "localizations": {
      "FR": "Stats 1-Var "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xF3": {
    "name": "2-Var Stats ",
    "type": "function",
    "categories": [
      "Catalog > V",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "2-VarStats [Xlistname,Ylistname,freqlist]",
        "arguments": [
          [
            "Xlistname",
            "list",
            true
          ],
          [
            "Ylistname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ]
        ],
        "description": "Performs two-variable analysis on the data in `Xlistname` and `Ylistname` with frequency `freqlist`.",
        "inEditorOnly": false,
        "location": [
          "[stat]",
          "CALC",
          "2:2-Var Stats"
        ]
      }
    ],
    "localizations": {
      "FR": "Stats 2-Var "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB0E": {
    "name": "variance(",
    "type": "function",
    "categories": [
      "Catalog > V",
      "List > Math"
    ],
    "syntaxes": [
      {
        "syntax": "variance(list[,freqlist])",
        "arguments": [
          [
            "list",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            true
          ]
        ],
        "description": "Returns the variance of the elements in `list` with frequency `freqlist`.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[list]",
          "MATH",
          "8:variance("
        ]
      }
    ],
    "localizations": {
      "FR": "variance("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x9D": {
    "name": "Vertical ",
    "type": "command",
    "categories": [
      "Catalog > V",
      "Drawing"
    ],
    "syntaxes": [
      {
        "syntax": "Vertical x[,color#,linestyle#]",
        "arguments": [
          [
            "x",
            "",
            false
          ],
          [
            "color#",
            "colorNum",
            true
          ],
          [
            "linestyle#",
            "number",
            true
          ]
        ],
        "description": "Draws a vertical line at `x `with specified color and line style.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.\nline style #: 1-4.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[draw]",
          "DRAW",
          "4:Vertical"
        ]
      }
    ],
    "localizations": {
      "FR": "Verticale "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x7E11": {
    "name": "vwAxes",
    "type": "command",
    "categories": [
      "Catalog > V",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "vwAxes",
        "arguments": [],
        "description": "Sets sequence graphs to plot `v(``n``)` on the x-axis and `w(``n``)` on the y-axis.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "vw"
        ]
      }
    ],
    "localizations": {
      "FR": "vwAxes"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF96": {
    "name": "Wait ",
    "type": "function",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "Waittime",
        "comment": "CE OS 5.2+",
        "arguments": [
          [
            "time",
            "",
            false
          ]
        ],
        "description": "Suspends execution of a program for a given time.  Maximum time is 100 seconds.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "A:Wait"
        ]
      },
      {
        "syntax": "Waittime",
        "comment": "CE OS 5.2+",
        "arguments": [
          [
            "time",
            "",
            false
          ]
        ],
        "description": "Suspends execution of a program for a given time.  Maximum time is 100 seconds.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "4:Wait"
        ],
        "specialCategory": "TI-Innovator™ Hub"
      }
    ],
    "localizations": {
      "FR": "Wait "
    },
    "since": {
      "TI-84+CE": "5.2.0"
    }
  },
  "0x7E0E": {
    "name": "Web",
    "type": "command",
    "categories": [
      "Catalog > W",
      "Window"
    ],
    "syntaxes": [
      {
        "syntax": "Web",
        "arguments": [],
        "description": "Sets sequence graphs to trace as webs.",
        "inEditorOnly": true,
        "location": [
          "[2nd]",
          "[format]",
          "Web"
        ]
      }
    ],
    "localizations": {
      "FR": "Toile"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xD1": {
    "name": "While ",
    "type": "while",
    "categories": [
      "Catalog > W",
      "Program > Control"
    ],
    "syntaxes": [
      {
        "syntax": ":Whilecondition:commands\n :End:command",
        "arguments": [
          [
            "condition",
            "",
            false
          ],
          [
            "commands",
            "",
            false
          ],
          [
            "command",
            "",
            false
          ]
        ],
        "description": "Executes `commands` while `condition` is true.",
        "inEditorOnly": true,
        "location": [
          "[prgm]",
          "CTL",
          "5:While"
        ]
      }
    ],
    "localizations": {
      "FR": "While "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x3D": {
    "name": " xor ",
    "type": "infix operator",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "valueA xor valueB",
        "arguments": [
          [
            "valueA",
            "",
            false
          ],
          [
            "valueB",
            "",
            false
          ]
        ],
        "description": "Returns 1 if only `valueA` or `valueB` = 0. `valueA` and `valueB` can be real numbers, expressions, or lists.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[test]",
          "LOGIC",
          "3:xor"
        ]
      }
    ],
    "localizations": {
      "FR": " ouExcl "
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xFD": {
    "name": "xyLine",
    "type": "constant",
    "categories": [
      "Catalog > X",
      "Stat Plot > Type"
    ],
    "syntaxes": [
      {
        "syntax": "Plot#(type,Xlist[,freqlist,color#])",
        "arguments": [
          [
            "type",
            "xyLine token",
            false
          ],
          [
            "Xlist",
            "list",
            false
          ],
          [
            "freqlist",
            "list",
            false
          ],
          [
            "color#",
            "colorNum",
            false
          ]
        ],
        "description": "Used as the \"type\" argument in the command\nWhere # gives Plot1, Plot2 or Plot3.",
        "inEditorOnly": false,
        "location": [
          "[2nd]",
          "[stat plot]",
          "TYPE"
        ]
      }
    ],
    "localizations": {
      "FR": "Polygone"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x88": {
    "name": "ZBox",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "ZBox",
        "arguments": [],
        "description": "Displays a graph, lets you draw a box that defines a new viewing window, and updates the window.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "ZOOM",
          "1:ZBox"
        ]
      }
    ],
    "localizations": {
      "FR": "Zboîte"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x8E": {
    "name": "ZDecimal",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "ZDecimal",
        "arguments": [],
        "description": "Adjusts the viewing window so that `TraceStep=0.1`, Δ`X=0.5` and Δ`Y=0.5`, and displays the graph screen with the origin centered on the screen.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "ZOOM",
          "4:ZDecimal"
        ]
      }
    ],
    "localizations": {
      "FR": "Zdécimal"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF18": {
    "name": "ZFrac1⁄2",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "ZFrac1/2",
        "arguments": [],
        "description": "Sets the window variables so that you can trace in increments of , if possible. Sets `TraceStep `to  and Δ`X` and Δ`Y `to .",
        "inEditorOnly": false,
        "location": [
          "[zoom]",
          "ZOOM",
          "B:ZFrac1/2"
        ]
      }
    ],
    "localizations": {
      "FR": "ZFrac1⁄2"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xEF19": {
    "name": "ZFrac1⁄3",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "ZFrac1/3",
        "arguments": [],
        "description": "Sets the window variables so that you can trace in increments of , if possible. Sets `TraceStep `to  and Δ`X` and Δ`Y `to .",
        "inEditorOnly": false,
        "location": [
          "[zoom]",
          "ZOOM",
          "C:ZFrac1/3"
        ]
      }
    ],
    "localizations": {
      "FR": "ZFrac1⁄3"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xEF1A": {
    "name": "ZFrac1⁄4",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "ZFrac1/4",
        "arguments": [],
        "description": "Sets the window variables so that you can trace in increments of , if possible. Sets `TraceStep `to  and Δ`X` and Δ`Y `to .",
        "inEditorOnly": false,
        "location": [
          "[zoom]",
          "ZOOM",
          "D:ZFrac1/4"
        ]
      }
    ],
    "localizations": {
      "FR": "ZFrac1⁄4"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xEF1B": {
    "name": "ZFrac1⁄5",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "ZFrac1/5",
        "arguments": [],
        "description": "Sets the window variables so that you can trace in increments of , if possible. Sets `TraceStep `to  and Δ`X` and Δ`Y `to .",
        "inEditorOnly": false,
        "location": [
          "[zoom]",
          "ZOOM",
          "E:ZFrac1/5"
        ]
      }
    ],
    "localizations": {
      "FR": "ZFrac1⁄5"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xEF1C": {
    "name": "ZFrac1⁄8",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "ZFrac1/8",
        "arguments": [],
        "description": "Sets the window variables so that you can trace in increments of , if possible. Sets `TraceStep `to  and Δ`X` and Δ`Y `to .",
        "inEditorOnly": false,
        "location": [
          "[zoom]",
          "ZOOM",
          "F:ZFrac1/8"
        ]
      }
    ],
    "localizations": {
      "FR": "ZFrac1⁄8"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0xEF1D": {
    "name": "ZFrac1⁄10",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "ZFrac1/10",
        "arguments": [],
        "description": "Sets the window variables so that you can trace in increments of , if possible. Sets `TraceStep `to  and Δ`X` and Δ`Y `to .",
        "inEditorOnly": false,
        "location": [
          "[zoom]",
          "ZOOM",
          "G:ZFrac1/10"
        ]
      }
    ],
    "localizations": {
      "FR": "ZFrac1⁄10"
    },
    "since": {
      "TI-84+": "2.53"
    }
  },
  "0x8C": {
    "name": "ZInteger",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "ZInteger",
        "arguments": [],
        "description": "Redefines the viewing window using the following dimensions: `TraceStep=1, `Δ`X=0.5, Xscl=10, `Δ`Y=1, Yscl=10.`",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "ZOOM",
          "8:ZInteger"
        ]
      }
    ],
    "localizations": {
      "FR": "ZintConf"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB41": {
    "name": "ZInterval ",
    "type": "command",
    "categories": [
      "Catalog > Z",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "ZIntervals[,listname,freqlist,confidence level]",
        "comment": "Data list input",
        "arguments": [
          [
            "s",
            "",
            true
          ],
          [
            "listname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "confidence level",
            "",
            true
          ]
        ],
        "description": "Computes a `z` confidence interval.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "7:ZInterval"
        ]
      },
      {
        "syntax": "ZIntervals,v,n[,confidence level]",
        "comment": "Summary stats input",
        "arguments": [
          [
            "s",
            "",
            false
          ],
          [
            "v",
            "",
            false
          ],
          [
            "n",
            "",
            true
          ],
          [
            "confidence level",
            "",
            true
          ]
        ],
        "description": "Computes a `z` confidence interval.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "7:ZInterval"
        ]
      }
    ],
    "localizations": {
      "FR": "ZintConf "
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x89": {
    "name": "Zoom In",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "Zoom In",
        "arguments": [],
        "description": "Magnifies the part of the graph that surrounds the cursor location.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "ZOOM",
          "2:Zoom In"
        ]
      }
    ],
    "localizations": {
      "FR": "Zoom +"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x8A": {
    "name": "Zoom Out",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "Zoom Out",
        "arguments": [],
        "description": "Displays a greater portion of the graph, centered on the cursor location.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "ZOOM",
          "3:Zoom Out"
        ]
      }
    ],
    "localizations": {
      "FR": "Zoom -"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB65": {
    "name": "ZoomFit",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "ZoomFit",
        "arguments": [],
        "description": "Recalculates `Ymin` and `Ymax` to include the minimum and maximum `Y` values, between `Xmin` and `Xmax`, of the selected functions and replots the functions.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "ZOOM",
          "0:ZoomFit"
        ]
      }
    ],
    "localizations": {
      "FR": "ZminMax"
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x90": {
    "name": "ZoomRcl",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "ZoomRcl",
        "arguments": [],
        "description": "Graphs the selected functions in a user-defined viewing window.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "MEMORY",
          "3:ZoomRcl"
        ]
      }
    ],
    "localizations": {
      "FR": "ZoomRpl"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x8F": {
    "name": "ZoomStat",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "ZoomStat",
        "arguments": [],
        "description": "Redefines the viewing window so that all statistical data points are displayed.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "ZOOM",
          "9:ZoomStat"
        ]
      }
    ],
    "localizations": {
      "FR": "ZoomStat"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x92": {
    "name": "ZoomSto",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "ZoomSto",
        "arguments": [],
        "description": "Immediately stores the current viewing window.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "MEMORY",
          "2:ZoomSto"
        ]
      }
    ],
    "localizations": {
      "FR": "SauveFen"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x8D": {
    "name": "ZPrevious",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "ZPrevious",
        "arguments": [],
        "description": "Replots the graph using the window variables of the graph that was displayed before you executed the last ZOOM instruction.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "MEMORY",
          "1:ZPrevious"
        ]
      }
    ],
    "localizations": {
      "FR": "Zprécédent"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xEF17": {
    "name": "ZQuadrant1",
    "type": "action",
    "categories": [],
    "syntaxes": [
      {
        "syntax": "ZQuadrant1",
        "arguments": [],
        "description": "Displays the portion of the graph that is in quadrant 1.",
        "inEditorOnly": false,
        "location": [
          "[zoom]",
          "ZOOM",
          "A:ZQuadrant1"
        ]
      }
    ],
    "localizations": {
      "FR": "ZQuadrant1"
    },
    "since": {
      "TI-84+": "0.01"
    }
  },
  "0x8B": {
    "name": "ZSquare",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "ZSquare",
        "arguments": [],
        "description": "Adjusts the `X` or `Y` window settings so that each pixel represents an equal width and height in the coordinate system, and updates the viewing window.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "ZOOM",
          "5:ZSquare"
        ]
      }
    ],
    "localizations": {
      "FR": "Zorthonormal"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0x86": {
    "name": "ZStandard",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "ZStandard",
        "arguments": [],
        "description": "Replots the functions immediately, updating the window variables to the default values.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "ZOOM",
          "6:ZStandard"
        ]
      }
    ],
    "localizations": {
      "FR": "ZStandard"
    },
    "since": {
      "TI-82": "1.0"
    }
  },
  "0xBB3B": {
    "name": "Z-Test(",
    "type": "function",
    "categories": [
      "Catalog > Z",
      "Statistics > Operations"
    ],
    "syntaxes": [
      {
        "syntax": "Z-Test(m0,s[,listname,freqlist,alternative,drawflag,color#])",
        "comment": "Data list input",
        "arguments": [
          [
            "m",
            "",
            false
          ],
          [
            "0",
            "",
            false
          ],
          [
            "s",
            "",
            true
          ],
          [
            "listname",
            "list",
            true
          ],
          [
            "freqlist",
            "list",
            true
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Performs a `z` test with frequency `freqlist`. `alternative`= -`1` is `<`; `alternative`=`0` is ; `alternative`=`1` is `>`. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "1:Z-Test("
        ]
      },
      {
        "syntax": "Z-Test(m0,s,v,n[,alternative,drawflag,color#])",
        "comment": "Summary stats input",
        "arguments": [
          [
            "m",
            "",
            false
          ],
          [
            "0",
            "",
            false
          ],
          [
            "s",
            "",
            false
          ],
          [
            "v",
            "",
            true
          ],
          [
            "n",
            "",
            true
          ],
          [
            "alternative",
            "",
            true
          ],
          [
            "drawflag",
            "",
            true
          ],
          [
            "color#",
            "colorNum",
            true
          ]
        ],
        "description": "Performs a `z` test. `alternative`=-`1` is `<`; `alternative`=`0` is ; `alternative`=`1` is `>`. `drawflag`=`1` draws results; `drawflag`=`0` calculates results.\nColor#: 10 - 24 or color name pasted from [vars] COLOR.",
        "inEditorOnly": true,
        "location": [
          "[stat]",
          "TESTS",
          "1:Z-Test("
        ]
      }
    ],
    "localizations": {
      "FR": "Z-Test("
    },
    "since": {
      "TI-83": "1.010"
    }
  },
  "0x87": {
    "name": "ZTrig",
    "type": "command",
    "categories": [
      "Catalog > Z"
    ],
    "syntaxes": [
      {
        "syntax": "ZTrig",
        "arguments": [],
        "description": "Replots the functions immediately, updating the window variables to preset values for plotting trig functions.",
        "inEditorOnly": true,
        "location": [
          "[zoom]",
          "ZOOM",
          "7:ZTrig"
        ]
      }
    ],
    "localizations": {
      "FR": "ZTrig"
    },
    "since": {
      "TI-82": "1.0"
    }
  }
}